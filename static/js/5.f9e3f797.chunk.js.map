{"version":3,"sources":["../../src/shared/uid.ts","../../src/web/Svg.tsx","../../src/web/ContentLoader.tsx","../../src/web/presets/FacebookStyle.tsx","components/Skeleton/index.tsx","components/ContentLoader/index.tsx","components/Product/index.tsx","containers/ProductsList/index.tsx","containers/CartNavigation/index.tsx","pages/Catalog/index.tsx"],"names":["SVG","animate","backgroundColor","backgroundOpacity","baseUrl","children","foregroundColor","foregroundOpacity","gradientRatio","uniqueKey","interval","rtl","speed","style","title","fixedId","Math","random","toString","substring","idClip","idGradient","idAria","rtlStyle","transform","keyTimes","dur","React.createElement","role","props","id","x","y","width","height","clipPath","fill","offset","stopColor","stopOpacity","attributeName","values","repeatCount","defaultProps","ContentLoader","Svg","Facebook","ReactContentLoaderFacebook","viewBox","rx","cx","cy","r","Skeleton","row","column","padding","borderRadius","list","i","j","itemWidth","height1","height3","y1","y3","push","key","ry","ContainerLoader","isActive","onLoading","className","boundingClientRect","setBoundingClientRect","React","useState","containerRef","useRef","useEffect","current","getBoundingClientRect","Fragment","ref","onClick","e","preventDefault","Product","withBem","focused","bem","imagesUrls","clearName","countInCart","name","price","index","all","modify","data-itemId","Card","src","alt","withFocusable","Bem","isElementInViewport","el","rect","top","left","bottom","window","innerHeight","document","documentElement","clientHeight","right","innerWidth","clientWidth","ConnectedList","connectToStore","products","ui","cart","setFocus","wrapRef","onItemFocus","layout","node","parent","nodeWidth","parentWidth","offsetLeft","gapWidth","leftItems","Array","from","indexOf","leftScroll","round","scrollTo","setTimeout","visibleIndex","commonIndex","product","setVisibility","items","selectedId","Container","map","item","itemId","itemsMap","length","focusKey","onEnterPress","addToCart","onBecameFocused","trackChildren","to","routes","CART","count","Typography","type","totalPrice","isLoading","hasItemsInCart","NavigationRightElement","Address","gotoPage","MAP","isShowAddress","Row","Navigation","subtitle","rightElement"],"mappings":"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","file":"static/js/5.f9e3f797.chunk.js","sourcesContent":["export default (): string =>\n  Math.random()\n    .toString(36)\n    .substring(6)\n","import * as React from 'react'\n\nimport uid from '../shared/uid'\nimport { IContentLoaderProps } from './'\n\nconst SVG: React.FC<IContentLoaderProps> = ({\n  animate,\n  backgroundColor,\n  backgroundOpacity,\n  baseUrl,\n  children,\n  foregroundColor,\n  foregroundOpacity,\n  gradientRatio,\n  uniqueKey,\n  interval,\n  rtl,\n  speed,\n  style,\n  title,\n  ...props\n}) => {\n  const fixedId = uniqueKey || uid()\n  const idClip = `${fixedId}-diff`\n  const idGradient = `${fixedId}-animated-diff`\n  const idAria = `${fixedId}-aria`\n\n  const rtlStyle = rtl ? { transform: 'scaleX(-1)' } : null\n  const keyTimes = `0; ${interval}; 1`\n  const dur = `${speed}s`\n\n  return (\n    <svg\n      aria-labelledby={idAria}\n      role=\"img\"\n      style={{ ...style, ...rtlStyle }}\n      {...props}\n    >\n      {title ? <title id={idAria}>{title}</title> : null}\n      <rect\n        role=\"presentation\"\n        x=\"0\"\n        y=\"0\"\n        width=\"100%\"\n        height=\"100%\"\n        clipPath={`url(${baseUrl}#${idClip})`}\n        style={{ fill: `url(${baseUrl}#${idGradient})` }}\n      />\n\n      <defs role=\"presentation\">\n        <clipPath id={idClip}>{children}</clipPath>\n\n        <linearGradient id={idGradient}>\n          <stop\n            offset=\"0%\"\n            stopColor={backgroundColor}\n            stopOpacity={backgroundOpacity}\n          >\n            {animate && (\n              <animate\n                attributeName=\"offset\"\n                values={`${-gradientRatio}; ${-gradientRatio}; 1`}\n                keyTimes={keyTimes}\n                dur={dur}\n                repeatCount=\"indefinite\"\n              />\n            )}\n          </stop>\n\n          <stop\n            offset=\"50%\"\n            stopColor={foregroundColor}\n            stopOpacity={foregroundOpacity}\n          >\n            {animate && (\n              <animate\n                attributeName=\"offset\"\n                values={`${-gradientRatio / 2}; ${-gradientRatio / 2}; ${1 +\n                  gradientRatio / 2}`}\n                keyTimes={keyTimes}\n                dur={dur}\n                repeatCount=\"indefinite\"\n              />\n            )}\n          </stop>\n\n          <stop\n            offset=\"100%\"\n            stopColor={backgroundColor}\n            stopOpacity={backgroundOpacity}\n          >\n            {animate && (\n              <animate\n                attributeName=\"offset\"\n                values={`0; 0; ${1 + gradientRatio}`}\n                keyTimes={keyTimes}\n                dur={dur}\n                repeatCount=\"indefinite\"\n              />\n            )}\n          </stop>\n        </linearGradient>\n      </defs>\n    </svg>\n  )\n}\n\nSVG.defaultProps = {\n  animate: true,\n  backgroundColor: '#f5f6f7',\n  backgroundOpacity: 1,\n  baseUrl: '',\n  foregroundColor: '#eee',\n  foregroundOpacity: 1,\n  gradientRatio: 2,\n  id: null,\n  interval: 0.25,\n  rtl: false,\n  speed: 1.2,\n  style: {},\n  title: 'Loading...',\n}\n\nexport default SVG\n","import * as React from 'react'\n\nimport { Facebook, IContentLoaderProps } from '.'\nimport Svg from './Svg'\n\nconst ContentLoader: React.FC<IContentLoaderProps> = props =>\n  props.children ? <Svg {...props} /> : <Facebook {...props} />\n\nexport default ContentLoader\n","import * as React from 'react'\n\nimport { IContentLoaderProps } from '..'\nimport ContentLoader from '../ContentLoader'\n\nconst ReactContentLoaderFacebook: React.FC<IContentLoaderProps> = props => (\n  <ContentLoader viewBox=\"0 0 476 124\" {...props}>\n    <rect x=\"48\" y=\"8\" width=\"88\" height=\"6\" rx=\"3\" />\n    <rect x=\"48\" y=\"26\" width=\"52\" height=\"6\" rx=\"3\" />\n    <rect x=\"0\" y=\"56\" width=\"410\" height=\"6\" rx=\"3\" />\n    <rect x=\"0\" y=\"72\" width=\"380\" height=\"6\" rx=\"3\" />\n    <rect x=\"0\" y=\"88\" width=\"178\" height=\"6\" rx=\"3\" />\n    <circle cx=\"20\" cy=\"20\" r=\"20\" />\n  </ContentLoader>\n)\n\nexport default ReactContentLoaderFacebook\n","import React from 'react';\nimport ContentLoader from 'react-content-loader';\n\ninterface SkeletonProps {\n    width?: number;\n    heading?: {\n        width: number;\n        height: number;\n    };\n    row?: number;\n    column?: number;\n    padding?: number;\n    borderRadius?: number;\n    [key: string]: any;\n}\n\nconst Skeleton: React.FC<SkeletonProps> = ({\n    width = 960,\n    row = 1,\n    column = 4,\n    padding = 8,\n    borderRadius = 8,\n    ...props\n}) => {\n    const list = [];\n    let height;\n\n    for (let i = 1; i <= row; i += 1) {\n        for (let j = 0; j < column; j += 1) {\n            const itemWidth = (width - padding * (column + 1)) / column;\n            const x = j * (itemWidth + padding * 2);\n            const height1 = 221;\n            const height2 = 20;\n            const height3 = 20;\n            const y1 = 0;\n            const y2 = y1 + padding + height1;\n            const y3 = y2 + padding / 2 + height2;\n\n            list.push(\n                <>\n                    <rect\n                        key={`${i}${j}1`}\n                        x={x}\n                        y={y1}\n                        rx={borderRadius}\n                        ry={borderRadius}\n                        width={itemWidth}\n                        height={height1}\n                    />\n                    {/* <rect key={`${i}${j}2`} x={x} y={y2} rx={borderRadius} ry={borderRadius} width={itemWidth} height={height2} />\n                    <rect\n                        key={`${i}${j}3`}\n                        x={x}\n                        y={y3}\n                        rx={borderRadius}\n                        ry={borderRadius}\n                        width={itemWidth * 0.6}\n                        height={height3}\n                    /> */}\n                </>,\n            );\n\n            if (i === row) {\n                height = y3 + height3;\n            }\n        }\n    }\n\n    return (\n        <>\n            <ContentLoader viewBox={`0 0 ${width} ${height}`} width=\"100%\" height=\"100%\" speed={2} {...props}>\n                {list}\n            </ContentLoader>\n        </>\n    );\n};\n\nexport default Skeleton;\n","import React from 'react';\n\nimport './style.scss';\n\ninterface ContenLoaderProps {\n    isActive: boolean;\n    className?: string;\n    onLoading: React.ReactNode;\n}\n\nconst ContainerLoader: React.FC<ContenLoaderProps> = ({isActive = false, onLoading, children, className = ''}) => {\n    const [boundingClientRect, setBoundingClientRect] = React.useState({width: 0, height: 0});\n    const containerRef: React.Ref<any> = React.useRef(null);\n\n    React.useEffect(() => {\n        setBoundingClientRect(containerRef.current\n            ? containerRef.current.getBoundingClientRect()\n            : {\n                width: 0,\n                height: 0,\n            });\n    }, [containerRef, isActive]);\n\n    return (\n        <React.Fragment>\n            <div\n                ref={containerRef}\n                className={`ContainerLoader__parentNode ${isActive ? 'ContainerLoader__parentNode_transparent' : ''} ${className}`}\n                onClick={(e) => isActive && e.preventDefault()}\n            >\n                {children}\n            </div>\n            {isActive && containerRef.current && (\n                <div className=\"ContainerLoader\">\n                    {onLoading}\n                </div>\n            )}\n        </React.Fragment>\n    );\n};\n\n\nexport default ContainerLoader;\n","import React from 'react';\nimport {\n    withFocusable,\n    FocusableProps,\n} from '@noriginmedia/react-spatial-navigation';\n\nimport Card from 'components/Card';\nimport Typography from 'components/Typography';\n\nimport withBem from 'hoc/withBem';\nimport {ProductItemModel} from 'stores/product';\n\nimport './style.scss';\n\ninterface ProductProps {\n    className?: string;\n    bem?: BemRenderer;\n    countInCart: number;\n    itemId: string;\n}\n\nconst DEFAULT_ALT = 'Изображение';\n\nconst Product: React.FC<ProductProps & FocusableProps & ProductItemModel> = withBem(({\n    focused,\n    bem,\n    imagesUrls,\n    clearName,\n    countInCart,\n    name,\n    price,\n    className = '',\n    index,\n    id,\n}) => {\n    return (\n        <div className={bem.all(className, bem.modify({focused}))} data-itemId={id}>\n            <Card index={index} className={bem('card')}>\n                <img className={bem('img')} src={imagesUrls[0]} alt={clearName || DEFAULT_ALT} />\n            </Card>\n            <div className={bem('description')}>\n                <span className={bem.modify({focused}, 'callToAction')} />\n                <div className={bem('row')}>\n                    <span className={bem('title', 'name')}>{name}</span>\n                </div>\n                <div className={bem('priceRow')}>\n                    <span className={bem('title', 'price')}>{price} ₽</span>\n                    {countInCart && <span className={bem('title', 'badge')}>{countInCart}</span>}\n                </div>\n            </div>\n        </div>\n\n    );\n}, 'Product');\n\nexport default withFocusable()(Product);\n","import React from 'react';\nimport {withFocusable, Layout, FocusableProps} from '@noriginmedia/react-spatial-navigation';\n\nimport {connectToStore} from 'tools/connect';\n\nimport {StoreType} from 'stores/types';\nimport {ProductItemModel} from 'stores/product';\n\nimport Container from 'components/Grids/Container';\nimport FocusableProduct from 'components/Product';\n\nimport Bem from 'tools/bem';\n\nimport './style.scss';\n\nconst bem = Bem('ProductsList');\n\nfunction scrollTo(node: HTMLElement, parent: HTMLElement): void {\n    const {width: nodeWidth, left, right} = node.getBoundingClientRect();\n  \n    const {width: parentWidth} = parent.getBoundingClientRect();\n  \n    const {offsetLeft} = node;\n    const itemsOnScreen = 4;\n\n    if (left < 0) {\n        parent.style.transform = `translateX(-${offsetLeft}px)`;\n    } else if (right > window.innerWidth) {\n        const gapWidth = (parentWidth - itemsOnScreen * nodeWidth) / itemsOnScreen;\n\n        const nextItemIndex = Array.from(parent.children).indexOf(node);\n        const leftItems = nextItemIndex - itemsOnScreen + 1;\n        const leftScroll = leftItems * nodeWidth + gapWidth * leftItems;\n  \n        parent.style.transform = `translateX(-${Math.round(leftScroll)}px)`;\n    }\n}\n\ninterface ProductsListType {\n    childKeyPrefix: string;\n}\n\n\nfunction isElementInViewport(el: Element): boolean {\n    const rect = el.getBoundingClientRect();\n\n    return (\n        rect.top >= 0\n        && rect.left >= 0\n        && rect.bottom <= (window.innerHeight || document.documentElement.clientHeight)\n        && rect.right <= (window.innerWidth || document.documentElement.clientWidth)\n    );\n}\n\nconst ProductsList: React.FC<StoreType & ProductsListType & FocusableProps> = ({products, ui, cart, setFocus}) => {\n    const wrapRef = React.useRef<HTMLDivElement>(null);\n\n    const onItemFocus = (id: string, layout: Layout): void => {\n        if (wrapRef.current) {\n            scrollTo(layout.node, wrapRef.current);\n\n            setTimeout(() => {\n                let visibleIndex = 1;\n                let commonIndex = 0;\n\n                if (wrapRef.current) {\n                    for (const product of wrapRef.current.children) {\n                        if (isElementInViewport(product)) {\n                            products.setVisibility(products.items[commonIndex], true, visibleIndex);\n                            visibleIndex += 1;\n                        } else {\n                            products.setVisibility(products.items[commonIndex], false, null);\n                        }\n                        commonIndex += 1;\n                    }\n                }\n            }, 400);\n        }\n    };\n\n    React.useEffect(() => {\n        if (wrapRef.current && products.selectedId) {\n            setFocus('CATALOG_ITEM_' + products.selectedId);\n        }\n    }, [products.selectedId]);\n\n    return (\n        <div className={bem()}>\n            <Container>\n                <div className={bem('row')} ref={wrapRef}>\n                    {products.items.map((item: ProductItemModel) => {\n                        return (\n                            <FocusableProduct\n                                index={item.index}\n                                itemId={item.id}\n                                countInCart={cart.itemsMap[item.id] && cart.itemsMap[item.id].length}\n                                key={item.id}\n                                focusKey={'CATALOG_ITEM_' + item.id}\n                                onEnterPress={(): void => cart.addToCart(item.id)}\n                                onBecameFocused={(layout: Layout): void => onItemFocus(item.id, layout)}\n                                {...item}\n                            />\n                        );\n                    })}\n                </div>\n            </Container>\n        </div>\n    );\n};\n\nconst ConnectedList = connectToStore(ProductsList);\n\nexport default withFocusable({\n    trackChildren: true,\n})(ConnectedList);\n","import React from 'react';\nimport {withFocusable, FocusableProps} from '@noriginmedia/react-spatial-navigation';\nimport {Link} from 'react-router-dom';\n\nimport {connectToStore} from 'tools/connect';\n\nimport {StoreType} from 'stores/types';\n\nimport Typography from 'components/Typography';\n\nimport withBem from 'hoc/withBem';\nimport {routes} from 'stores/ui';\n\nimport './style.scss';\n\nconst Cart: React.FC<StoreType & BemProps & FocusableProps> = ({cart, focused, bem}) => {\n    return (\n        <Link to={routes.CART}>\n            <div className={bem.modify({focused})}>\n                <div className={bem('icon')}>\n                    {cart.count > 0 && (\n                        <span className={bem('badge')}>\n                            {cart.count}\n                        </span>\n                    )}\n                </div>\n                <div className={bem('block')}>\n                    <div>\n                        <Typography type=\"subheader\">Корзина</Typography>\n                    </div>\n                    <div>\n                        <Typography type=\"subheaderDescription\">{cart.totalPrice} ₽</Typography>\n                    </div>\n                </div>\n            </div>\n        </Link>\n    );\n};\n\nexport default withFocusable()(withBem(connectToStore(Cart), 'Cart'));\n","import React from 'react';\nimport {\n    withFocusable,\n    FocusableProps,\n} from '@noriginmedia/react-spatial-navigation';\n\nimport Container from 'components/Grids/Container';\nimport Row from 'components/Grids/Row';\n\nimport Skeleton from 'components/Skeleton';\nimport ContentLoader from 'components/ContentLoader';\nimport Navigation from 'containers/Navigation';\nimport ProductsList from 'containers/ProductsList';\nimport Cart from 'containers/CartNavigation';\nimport Address from 'containers/Address';\n\nimport {connectToStore} from 'tools/connect';\nimport {routes} from 'stores/ui';\n\nimport {StoreType} from 'stores/types';\n\nconst MainPage: React.FC<StoreType & FocusableProps> = ({ui, cart, setFocus}) => {\n    React.useEffect(() => {\n        setFocus('ITEMS');\n    }, [setFocus, ui.isLoading]);\n\n    const hasItemsInCart = cart.count > 0;\n\n    const NavigationRightElement = (\n        <>\n            <Address onEnterPress={(): void => ui.gotoPage(routes.MAP)} isShowAddress={!hasItemsInCart} />\n            {hasItemsInCart && <Cart onEnterPress={(): void => ui.gotoPage(routes.CART)} />}\n        </>\n    );\n\n    const onLoading = (\n        <Container>\n            <Row>\n                <Skeleton backgroundColor=\"#262828\" foregroundColor=\"#414545\" />\n            </Row>\n        </Container>\n    );\n\n    return (\n        <>\n            <Navigation title=\"Самокат\" subtitle=\"«Хочу еду к просмотру»\" rightElement={NavigationRightElement} />\n            <ContentLoader isActive={ui.isLoading} onLoading={onLoading}>\n                <ProductsList trackChildren focusKey=\"ITEMS\" />\n            </ContentLoader>\n        </>\n    );\n};\n\nexport default withFocusable({\n    trackChildren: true,\n})(connectToStore(MainPage));\n"],"sourceRoot":""}