{"version":3,"sources":["configs/index.js","containers/AppContainer/index.tsx","tools/connect.tsx","tools/browsers-control/detect.js","tools/browsers-control/index.ts","tools/browsers-control/browser.js","index.tsx","stores/viewItem.ts","stores/ui.ts","tools/history.js","mocks/index.ts","stores/user.ts","stores/product.ts","stores/products.ts","stores/cart.ts","stores/casts.ts","stores/index.ts"],"names":["environment","process","cssPrefix","pkg","api","REACT_APP_API","development","staging","production","test","isProduction","initNavigation","CatalogPage","React","lazy","CartPage","App","pageRef","useRef","fallback","className","ref","Suspense","path","routes","CATALOG","CART","to","store","setStore","newStore","connect","selector","baseComponent","component","ownProps","Error","useObserver","displayName","name","connectToStore","storeData","root","undefined","Array","prototype","map","callback","thisArg","T","A","k","this","TypeError","O","Object","len","length","kValue","mappedValue","call","detect","_this","parsers","types","regexes","browser_parsers","regex","family_replacement","manufacturer","other","family_replacment","tablet","v2_replacement","v1_replacement","os_parsers","os_v2_replacement","os_v1_replacement","os_replacement","mobile_os_families","device_parsers","device_replacement","mobile_browser_families","results","parser","families","type","ArrayProto","nativeForEach","Function","forEach","indexOf","find","ua","obj","ret","i","each","iterator","context","l","key","_","has","check","str","toVersionString","output","major","minor","patch","toString","suffix","family","parse","regexp","RegExp","rep","major_rep","major_version_replacement","m","match","replace","parseInt","man","a","source","browser","version","os","device","mobile_agents","arr","props","hasOwnProperty","prop","module","exports","define","require","window","UserAgent","navigator","userAgent","browsersContol","browserVerify","userBrowser","browserName","browserVersion","isIe","nodeElement","document","createElement","setAttribute","innerHTML","isNotAllowedBrowser","minVersion","some","chackBrowser","default","browserContols","renderApp","ReactDOM","render","history","getElementById","body","appendChild","AppContainer","hot","accept","ViewItem","model","id","string","title","optional","number","maybeNull","action","Ui","page","enumeration","values","previous","isLoading","boolean","viewItems","array","visibles","actions","self","ui","setItem","item","console","log","push","removeItem","cast","filter","gotoPage","setVisible","itemId","removeVisible","splice","getIndex","createHashHistory","basename","homepage","USER_MOCK","address","location","User","ProductItem","identifier","clearName","price","imagesUrls","index","visible","Products","items","selectedId","products","setVisibility","value","selectItem","Cart","reference","views","reduce","acc","cart","addToCart","removeFromCart","casts","SHOW_ITEMS","command","stock","guid","clear_name","Number","images_urls","applySnapshot","ADD_ITEM","itemName","count","GO_TO_VALIDATION","VALIDATION_OK","user","onMessage","message","smart_app_data","castFn","__messages","afterCreate","AssistantHost","ready","create","AssistantClient","onStart","onData","onRequestState","updateState","JSON","stringify","product","count_in_cart","itemsMap","sendMessage"],"mappings":"sGAAA,8CAEA,MAeaA,EAAcC,aAEZ,KACXC,UAAWC,EAAID,UACfF,cACAI,IAAKH,+JAAYI,eApBJ,CACbC,YAAa,CACTF,IAAK,WAETG,QAAS,CACLH,IAAK,aAETI,WAAY,CACRJ,IAAK,YAETK,KAAM,CACFL,IAAK,aASkCJ,GAAaI,IACxDM,aAA8B,eAAhBV,I,iCCvBlB,yEAWAW,yBAAe,IAIf,MAAMC,EAAcC,IAAMC,KAAK,IAAM,qDAC/BC,EAAWF,IAAMC,KAAK,IAAM,qDA4BnBE,UA1BO,KAClB,MAAMC,EAAUJ,IAAMK,OAAuB,MAEvCC,EACF,wCAKJ,OACI,yBAAKC,UAAU,eAAeC,IAAKJ,GAC/B,kBAAC,IAAMK,SAAP,CAAgBH,SAAUA,GACtB,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOI,KAAMC,IAAOC,SAChB,kBAACb,EAAD,CAAaK,QAASA,KAE1B,kBAAC,IAAD,CAAOM,KAAMC,IAAOE,MAChB,kBAACX,EAAD,CAAUE,QAASA,KAEvB,kBAAC,IAAD,CAAUU,GAAIH,IAAOC,e,iCCrCzC,iFAGA,IAAIG,EAA0B,KAEvB,MAAMC,EAAYC,IACrBF,EAAQE,GAKNC,EAAWC,GAAwBC,IAErC,MAAMC,EAAaC,IACf,GAAc,OAAVP,EAAgB,MAAM,IAAIQ,MAAM,yDACpC,OAAOC,YAAY,IACRJ,EAAc,IAAIE,KAAaH,EAASJ,EAAOO,OAK9D,OADAD,EAAUI,YAAcL,EAAcM,KAC/BL,GAIJ,MAEMM,EAAkBN,GACpBH,EAASU,GAAoCA,EAA7CV,CAAwDG,I,oBC5BnE,OAkBC,SAAUQ,EAAMC,GAIRC,MAAMC,UAAUC,MACjBF,MAAMC,UAAUC,IAAM,SAAUC,EAAUC,GACtC,IAAIC,EACAC,EACAC,EACJ,GAAY,MAARC,KACA,MAAM,IAAIC,UAAU,gCAGxB,MAAMC,EAAIC,OAAOH,MAGXI,EAAMF,EAAEG,SAAW,EAGzB,GAAwB,oBAAbV,EACP,MAAM,IAAIM,UAAUN,EAAW,sBAYnC,IATIC,IACAC,EAAID,GAIRE,EAAI,IAAIN,MAAMY,GAEdL,EAAI,EAEGA,EAAIK,GAAK,CACZ,IAAIE,EACAC,EAMAR,KAAKG,IAELI,EAASJ,EAAEH,GAGXQ,EAAcZ,EAASa,KAAKX,EAAGS,EAAQP,EAAGG,GAO1CJ,EAAEC,GAAKQ,GAGXR,IAGJ,OAAOD,IAIf,MAAMW,EAASnB,EAAKmB,OAAU,WAE1B,MAAMC,EAAQ,aAy4BdA,EAAMC,QAAU,CAAC,iBAAkB,kBAAmB,aAAc,qBAAsB,2BAE1FD,EAAME,MAAQ,CAAC,UAAW,KAAM,UAEhCF,EAAMG,QA34BU,CACZC,gBAAiB,CAAC,CACdC,MAAO,2CACPC,mBAAoB,MACpBC,aAAc,YACf,CACCF,MAAO,0DACPC,mBAAoB,SACpBE,OAAO,GACR,CACCH,MAAO,2CACPC,mBAAoB,8BACpBE,OAAO,GACR,CACCH,MAAO,gDACPC,mBAAoB,kBACrB,CACCD,MAAO,gCACPI,kBAAmB,kBACpB,CACCJ,MAAO,2BACPC,mBAAoB,kBACrB,CACCD,MAAO,oCACPC,mBAAoB,kBACrB,CACCD,MAAO,kEACPC,mBAAoB,gBACrB,CACCD,MAAO,yCACPC,mBAAoB,iBACrB,CACCD,MAAO,yCACPC,mBAAoB,gBACrB,CACCD,MAAO,0DACPC,mBAAoB,iBACrB,CACCD,MAAO,0DACPC,mBAAoB,gBACrB,CACCD,MAAO,kEACPC,mBAAoB,gBACrB,CACCD,MAAO,qDACPC,mBAAoB,SACpBI,QAAQ,GACT,CACCL,MAAO,8DACR,CACCA,MAAO,kCACPC,mBAAoB,QACpBE,OAAO,GACR,CACCH,MAAO,sCACPC,mBAAoB,WACpBE,OAAO,GACR,CACCH,MAAO,uCACPC,mBAAoB,YACrB,CACCD,MAAO,wCACPC,mBAAoB,YACrB,CACCD,MAAO,uCACPC,mBAAoB,YACrB,CACCD,MAAO,4BACPC,mBAAoB,sBACpBE,OAAO,GACR,CACCH,MAAO,wDACPC,mBAAoB,eACpBI,QAAQ,GACT,CACCL,MAAO,gDACPC,mBAAoB,gBACrB,CACCD,MAAO,aACPC,mBAAoB,gBACrB,CACCD,MAAO,+BACPC,mBAAoB,cACrB,CACCD,MAAO,mCACPC,mBAAoB,cACrB,CACCD,MAAO,sDACPC,mBAAoB,SACrB,CACCD,MAAO,sCACPC,mBAAoB,SACrB,CACCD,MAAO,iCACPC,mBAAoB,SACrB,CACCD,MAAO,0BACPC,mBAAoB,SACrB,CACCD,MAAO,yCACPC,mBAAoB,kBACrB,CACCD,MAAO,WACPC,mBAAoB,SACpBE,OAAO,GACR,CACCH,MAAO,+CACPC,mBAAoB,YACpBE,OAAO,GACR,CACCH,MAAO,4DACPC,mBAAoB,WACpBE,OAAO,GACR,CACCH,MAAO,4DACPC,mBAAoB,WACpBE,OAAO,GACR,CACCH,MAAO,SACPC,mBAAoB,SACpBE,OAAO,GACR,CACCH,MAAO,iDACPC,mBAAoB,WACpBE,OAAO,GACR,CACCH,MAAO,uCACPC,mBAAoB,YACpBE,OAAO,GACR,CACCH,MAAO,kBACPC,mBAAoB,QACpBE,OAAO,GACR,CACCH,MAAO,2CACPC,mBAAoB,gBACpBE,OAAO,GACR,CACCH,MAAO,kBACPC,mBAAoB,iBACpBE,OAAO,GACR,CACCH,MAAO,2BACPC,mBAAoB,UACrB,CACCD,MAAO,2BACPC,mBAAoB,WACpBE,OAAO,GACR,CACCH,MAAO,SACPC,mBAAoB,SACpBE,OAAO,GACR,CACCH,MAAO,yBACPC,mBAAoB,QACrB,CACCD,MAAO,2CACPC,mBAAoB,iBACrB,CACCD,MAAO,4CACPC,mBAAoB,qBACrB,CACCD,MAAO,oDACPC,mBAAoB,iBACrB,CACCD,MAAO,yCACPC,mBAAoB,gBACrB,CACCD,MAAO,uCACPC,mBAAoB,aACpBE,OAAO,GACR,CACCH,MAAO,gCACPC,mBAAoB,gBACpBE,OAAO,GACR,CACCH,MAAO,oCACPC,mBAAoB,WACpBE,OAAO,GACR,CACCH,MAAO,oCACPC,mBAAoB,iBACpBE,OAAO,GACR,CACCH,MAAO,4CACPC,mBAAoB,aACpBE,OAAO,GACR,CACCH,MAAO,wCACPC,mBAAoB,eACrB,CACCD,MAAO,+BACPC,mBAAoB,cACrB,CACCD,MAAO,ubACR,CACCA,MAAO,2ZACR,CACCA,MAAO,mGACR,CACCA,MAAO,kFACR,CACCA,MAAO,kBACPM,eAAgB,IAChBC,eAAgB,KACjB,CACCP,MAAO,mBACPM,eAAgB,IAChBC,eAAgB,KACjB,CACCP,MAAO,kBACPM,eAAgB,IAChBC,eAAgB,KACjB,CACCP,MAAO,wBACPM,eAAgB,IAChBC,eAAgB,KACjB,CACCP,MAAO,sBACPO,eAAgB,KACjB,CACCP,MAAO,gCACPC,mBAAoB,aACrB,CACCD,MAAO,iCACPC,mBAAoB,mBACrB,CACCD,MAAO,sCACR,CACCA,MAAO,kDACR,CACCA,MAAO,yBACPG,OAAO,GACR,CACCH,MAAO,oBACPG,OAAO,GACR,CACCH,MAAO,yCACPG,OAAO,GACR,CACCH,MAAO,oCACPC,mBAAoB,UACpBE,OAAO,GACR,CACCH,MAAO,8BACPO,eAAgB,IAChBJ,OAAO,GACR,CACCH,MAAO,uBACPC,mBAAoB,cACpBC,aAAc,QACf,CACCF,MAAO,6CACPE,aAAc,QACf,CACCF,MAAO,wCACPG,OAAO,GACR,CACCH,MAAO,4BACPC,mBAAoB,UACpBE,OAAO,GACR,CACCH,MAAO,4BACPC,mBAAoB,UACpBE,OAAO,GACR,CACCH,MAAO,qCACPC,mBAAoB,WACpBE,OAAO,GACR,CACCH,MAAO,2CACPC,mBAAoB,gBACpBC,aAAc,SACf,CACCF,MAAO,kCACPC,mBAAoB,gBACpBC,aAAc,SACf,CACCF,MAAO,SACPC,mBAAoB,gBACpBC,aAAc,SACf,CACCF,MAAO,6CACPC,mBAAoB,gBACpBC,aAAc,SACf,CACCF,MAAO,oCACPC,mBAAoB,gBACpBC,aAAc,SACf,CACCF,MAAO,WACPC,mBAAoB,gBACpBC,aAAc,SACf,CACCF,MAAO,2CACPC,mBAAoB,gBACpBI,QAAQ,EACRH,aAAc,SACf,CACCF,MAAO,kCACPC,mBAAoB,gBACpBI,QAAQ,EACRH,aAAc,SACf,CACCF,MAAO,SACPC,mBAAoB,gBACpBI,QAAQ,EACRH,aAAc,SACf,CACCF,MAAO,0BACPG,OAAO,GACR,CACCH,MAAO,UACPO,eAAgB,IAChBJ,OAAO,GACR,CACCH,MAAO,WACPC,mBAAoB,+BACpBC,aAAc,SACf,CACCF,MAAO,iDACPE,aAAc,SACf,CACCF,MAAO,wCACPE,aAAc,SACf,CACCF,MAAO,iCACPE,aAAc,SACf,CACCF,MAAO,qCACPC,mBAAoB,eACpBC,aAAc,SACf,CACCF,MAAO,mBACPM,eAAgB,IAChBC,eAAgB,IAChBN,mBAAoB,eACpBC,aAAc,SACf,CACCF,MAAO,6BACPC,mBAAoB,oBACpBC,aAAc,SACf,CACCF,MAAO,oDACPC,mBAAoB,8BACpBC,aAAc,SACf,CACCF,MAAO,qBACPE,aAAc,SACf,CACCF,MAAO,qDACPC,mBAAoB,oBACpBI,QAAQ,EACRH,aAAc,SACf,CACCF,MAAO,oDACPC,mBAAoB,oBACpBC,aAAc,OACf,CACCF,MAAO,4BACPC,mBAAoB,aACpBC,aAAc,OACf,CACCF,MAAO,6BACPG,OAAO,GACR,CACCH,MAAO,2BACPC,mBAAoB,cACpBC,aAAc,QACf,CACCF,MAAO,wBACPC,mBAAoB,WACpBC,aAAc,QACf,CACCF,MAAO,6BACPG,OAAO,GACR,CACCH,MAAO,2CACPG,OAAO,GACR,CACCH,MAAO,4CACPG,OAAO,EACPE,QAAQ,GACT,CACCL,MAAO,yEACPC,mBAAoB,kBACrB,CACCD,MAAO,mDACPC,mBAAoB,UACrB,CACCD,MAAO,iBACR,CACCA,MAAO,+BACPG,OAAO,GACR,CACCH,MAAO,2BACPO,eAAgB,IAChBJ,OAAO,GACR,CACCH,MAAO,mCACPG,OAAO,GACR,CACCH,MAAO,WACPC,mBAAoB,iBACpBE,OAAO,GACR,CACCH,MAAO,gCACPC,mBAAoB,MACrB,CACCD,MAAO,yBACPC,mBAAoB,OAExBO,WAAY,CAAC,CACTR,MAAO,mDACR,CACCA,MAAO,qDACR,CACCA,MAAO,kBACPS,kBAAmB,IACnBC,kBAAmB,KACpB,CACCV,MAAO,mBACPS,kBAAmB,IACnBC,kBAAmB,KACpB,CACCV,MAAO,kBACPS,kBAAmB,IACnBC,kBAAmB,KACpB,CACCV,MAAO,wBACPS,kBAAmB,IACnBC,kBAAmB,KACpB,CACCV,MAAO,sBACPU,kBAAmB,KACpB,CACCV,MAAO,gCACPW,eAAgB,WACjB,CACCX,MAAO,yBACR,CACCA,MAAO,kCACPW,eAAgB,cACjB,CACCX,MAAO,WACPW,eAAgB,oBACjB,CACCX,MAAO,qBACPW,eAAgB,aACjB,CACCX,MAAO,qBACPW,eAAgB,iBACjB,CACCX,MAAO,kHACR,CACCA,MAAO,uCACPW,eAAgB,cACjB,CACCX,MAAO,qBACPW,eAAgB,aACjB,CACCX,MAAO,oBACPW,eAAgB,mBACjB,CACCX,MAAO,qBACPW,eAAgB,gBACjB,CACCX,MAAO,sCACR,CACCA,MAAO,oBACPW,eAAgB,kBACjB,CACCX,MAAO,aACPW,eAAgB,kBACjB,CACCX,MAAO,UACPW,eAAgB,cACjB,CACCX,MAAO,0BACPG,OAAO,GACR,CACCH,MAAO,6CACPE,aAAc,SACf,CACCF,MAAO,2BACPE,aAAc,SACf,CACCF,MAAO,+CACPW,eAAgB,MAChBT,aAAc,SACf,CACCF,MAAO,4BACPW,eAAgB,MAChBT,aAAc,SACf,CACCF,MAAO,gBACPK,QAAQ,EACRH,aAAc,SACf,CACCF,MAAO,wDACPW,eAAgB,MAChBT,aAAc,SACf,CACCF,MAAO,kDACPW,eAAgB,aACjB,CACCX,MAAO,kDACPG,OAAO,GACR,CACCH,MAAO,2BACPG,OAAO,GACR,CACCH,MAAO,+DACPG,OAAO,GACR,CACCH,MAAO,oCACPW,eAAgB,cACjB,CACCX,MAAO,kCACPW,eAAgB,kBACjB,CACCX,MAAO,kCACPW,eAAgB,mBACjB,CACCX,MAAO,cACPW,eAAgB,aACjB,CACCX,MAAO,yBACPW,eAAgB,cACjB,CACCX,MAAO,UACPG,OAAO,GACR,CACCH,MAAO,mBACPW,eAAgB,cACjB,CACCX,MAAO,kEACPW,eAAgB,gBAChBT,aAAc,OACf,CACCF,MAAO,kEACPW,eAAgB,gBAChBT,aAAc,OACf,CACCF,MAAO,2CACPW,eAAgB,uBAChBN,QAAQ,EACRH,aAAc,OACf,CACCF,MAAO,gBACPW,eAAgB,uBAChBN,QAAQ,EACRH,aAAc,OACf,CACCF,MAAO,kBACPW,eAAgB,gBAChBT,aAAc,OACf,CACCF,MAAO,8CACPW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","file":"static/js/main.fb6812b7.chunk.js","sourcesContent":["import pkg from '../../package.json';\n\nconst defaults = {\n    development: {\n        api: 'dev-api',\n    },\n    staging: {\n        api: 'stage-api',\n    },\n    production: {\n        api: 'prod-api',\n    },\n    test: {\n        api: 'test-api',\n    },\n};\n\nexport const environment = process.env.REACT_APP_ENVIRONMENT || 'development';\n\nexport default {\n    cssPrefix: pkg.cssPrefix,\n    environment,\n    api: process.env.REACT_APP_API || defaults[environment].api,\n    isProduction: environment === 'production',\n};\n","import React from 'react';\nimport {Switch, Route, Redirect} from 'react-router-dom';\n\nimport {initNavigation} from '@noriginmedia/react-spatial-navigation';\n\nimport {routes} from 'stores/ui';\n\nimport 'style/global.scss';\nimport 'normalize.css/normalize.css';\nimport './style.scss';\n\ninitNavigation({\n    // debug: true,\n});\n   \nconst CatalogPage = React.lazy(() => import('pages/Catalog'));\nconst CartPage = React.lazy(() => import('pages/Cart'));\n\nconst App: React.FC = () => {\n    const pageRef = React.useRef<HTMLDivElement>(null);\n\n    const fallback = (\n        <div>\n            Loading\n        </div>\n    );\n\n    return (\n        <div className=\"AppContainer\" ref={pageRef}>\n            <React.Suspense fallback={fallback}>\n                <Switch>\n                    <Route path={routes.CATALOG}>\n                        <CatalogPage pageRef={pageRef} />\n                    </Route>\n                    <Route path={routes.CART}>\n                        <CartPage pageRef={pageRef} />\n                    </Route>\n                    <Redirect to={routes.CATALOG} />\n                </Switch>\n            </React.Suspense>\n        </div>\n    );\n};\n\nexport default App;\n","import {useObserver} from 'mobx-react-lite';\nimport {StoreType} from '../stores/types';\n\nlet store: StoreType | null = null;\n\nexport const setStore = (newStore: StoreType): void => {\n    store = newStore;\n};\n\ntype CustomPropTypes = Record<string, any>\n\nconst connect = (selector: Function) => (baseComponent: React.FC<StoreType & any>): React.FC<StoreType & any> => {\n    /* eslint-disable */\n    const component = (ownProps: CustomPropTypes) => {\n        if (store === null) throw new Error('Please, use setStore before your ReactDOM.render call');\n        return useObserver(() => {\n            return baseComponent({...ownProps, ...selector(store, ownProps)});\n        });\n    };\n    /* eslint-enable */\n    component.displayName = baseComponent.name;\n    return component;\n};\n\nexport default connect;\nexport const getStore = (): StoreType | null => store;\n\nexport const connectToStore = (component: React.FC<StoreType & any>): React.FC<StoreType & any> => {\n    return connect((storeData: StoreType): StoreType => storeData)(component);\n};\n","/* eslint-disable */\n/**\n * Detect.js: User-Agent Parser\n * https://github.com/darcyclarke/Detect.js\n * Dual licensed under the MIT and GPL licenses.\n *\n * @version 2.2.2\n * @author Darcy Clarke\n * @url http://darcyclarke.me\n * @createdat Mon Oct 26 2015 08:21:54 GMT-0200 (Horário brasileiro de verão)\n *\n * Based on UA-Parser (https://github.com/tobie/ua-parser) by Tobie Langel\n *\n * Example Usage:\n * var agentInfo = detect.parse(navigator.userAgent);\n * console.log(agentInfo.browser.family); // Chrome\n *\n */\n(function (root, undefined) {\n    // Shim Array.prototype.map if necessary\n    // Production steps of ECMA-262, Edition 5, 15.4.4.19\n    // Reference: http://es5.github.com/#x15.4.4.19\n    if (!Array.prototype.map) {\n        Array.prototype.map = function (callback, thisArg) {\n            let T,\n                A,\n                k\n            if (this == null) {\n                throw new TypeError(' this is null or not defined')\n            }\n            // 1. Let O be the result of calling ToObject passing the |this| value as the argument.\n            const O = Object(this)\n            // 2. Let lenValue be the result of calling the Get internal method of O with the argument \"length\".\n            // 3. Let len be ToUint32(lenValue).\n            const len = O.length >>> 0\n            // 4. If IsCallable(callback) is false, throw a TypeError exception.\n            // See: http://es5.github.com/#x9.11\n            if (typeof callback !== 'function') {\n                throw new TypeError(callback + ' is not a function')\n            }\n            // 5. If thisArg was supplied, let T be thisArg; else let T be undefined.\n            if (thisArg) {\n                T = thisArg\n            }\n            // 6. Let A be a new array created as if by the expression new Array(len) where Array is\n            // the standard built-in constructor with that name and len is the value of len.\n            A = new Array(len)\n            // 7. Let k be 0\n            k = 0\n            // 8. Repeat, while k < len\n            while (k < len) {\n                var kValue,\n                    mappedValue\n                // a. Let Pk be ToString(k).\n                //   This is implicit for LHS operands of the in operator\n                // b. Let kPresent be the result of calling the HasProperty internal method of O with argument Pk.\n                //   This step can be combined with c\n                // c. If kPresent is true, then\n                if (k in O) {\n                    // i. Let kValue be the result of calling the Get internal method of O with argument Pk.\n                    kValue = O[k]\n                    // ii. Let mappedValue be the result of calling the Call internal method of callback\n                    // with T as the this value and argument list containing kValue, k, and O.\n                    mappedValue = callback.call(T, kValue, k, O)\n                    // iii. Call the DefineOwnProperty internal method of A with arguments\n                    // Pk, Property Descriptor {Value: mappedValue, : true, Enumerable: true, Configurable: true},\n                    // and false.\n                    // In browsers that support Object.defineProperty, use the following:\n                    // Object.defineProperty(A, Pk, { value: mappedValue, writable: true, enumerable: true, configurable: true });\n                    // For best browser support, use the following:\n                    A[k] = mappedValue\n                }\n                // d. Increase k by 1.\n                k++\n            }\n            // 9. return A\n            return A\n        }\n    }\n    // Detect\n    const detect = root.detect = (function () {\n        // Context\n        const _this = function () {}\n        // Regexes\n        const regexes = {\n            browser_parsers: [{\n                regex: '^(Opera)/(\\\\d+)\\\\.(\\\\d+) \\\\(Nintendo Wii',\n                family_replacement: 'Wii',\n                manufacturer: 'Nintendo'\n            }, {\n                regex: '(SeaMonkey|Camino)/(\\\\d+)\\\\.(\\\\d+)\\\\.?([ab]?\\\\d+[a-z]*)',\n                family_replacement: 'Camino',\n                other: true\n            }, {\n                regex: '(Pale[Mm]oon)/(\\\\d+)\\\\.(\\\\d+)\\\\.?(\\\\d+)?',\n                family_replacement: 'Pale Moon (Firefox Variant)',\n                other: true\n            }, {\n                regex: '(Fennec)/(\\\\d+)\\\\.(\\\\d+)\\\\.?([ab]?\\\\d+[a-z]*)',\n                family_replacement: 'Firefox Mobile'\n            }, {\n                regex: '(Fennec)/(\\\\d+)\\\\.(\\\\d+)(pre)',\n                family_replacment: 'Firefox Mobile'\n            }, {\n                regex: '(Fennec)/(\\\\d+)\\\\.(\\\\d+)',\n                family_replacement: 'Firefox Mobile'\n            }, {\n                regex: 'Mobile.*(Firefox)/(\\\\d+)\\\\.(\\\\d+)',\n                family_replacement: 'Firefox Mobile'\n            }, {\n                regex: '(Namoroka|Shiretoko|Minefield)/(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+(?:pre)?)',\n                family_replacement: 'Firefox ($1)'\n            }, {\n                regex: '(Firefox)/(\\\\d+)\\\\.(\\\\d+)(a\\\\d+[a-z]*)',\n                family_replacement: 'Firefox Alpha'\n            }, {\n                regex: '(Firefox)/(\\\\d+)\\\\.(\\\\d+)(b\\\\d+[a-z]*)',\n                family_replacement: 'Firefox Beta'\n            }, {\n                regex: '(Firefox)-(?:\\\\d+\\\\.\\\\d+)?/(\\\\d+)\\\\.(\\\\d+)(a\\\\d+[a-z]*)',\n                family_replacement: 'Firefox Alpha'\n            }, {\n                regex: '(Firefox)-(?:\\\\d+\\\\.\\\\d+)?/(\\\\d+)\\\\.(\\\\d+)(b\\\\d+[a-z]*)',\n                family_replacement: 'Firefox Beta'\n            }, {\n                regex: '(Namoroka|Shiretoko|Minefield)/(\\\\d+)\\\\.(\\\\d+)([ab]\\\\d+[a-z]*)?',\n                family_replacement: 'Firefox ($1)'\n            }, {\n                regex: '(Firefox).*Tablet browser (\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)',\n                family_replacement: 'MicroB',\n                tablet: true\n            }, {\n                regex: '(MozillaDeveloperPreview)/(\\\\d+)\\\\.(\\\\d+)([ab]\\\\d+[a-z]*)?'\n            }, {\n                regex: '(Flock)/(\\\\d+)\\\\.(\\\\d+)(b\\\\d+?)',\n                family_replacement: 'Flock',\n                other: true\n            }, {\n                regex: '(RockMelt)/(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)',\n                family_replacement: 'Rockmelt',\n                other: true\n            }, {\n                regex: '(Navigator)/(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)',\n                family_replacement: 'Netscape'\n            }, {\n                regex: '(Navigator)/(\\\\d+)\\\\.(\\\\d+)([ab]\\\\d+)',\n                family_replacement: 'Netscape'\n            }, {\n                regex: '(Netscape6)/(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)',\n                family_replacement: 'Netscape'\n            }, {\n                regex: '(MyIBrow)/(\\\\d+)\\\\.(\\\\d+)',\n                family_replacement: 'My Internet Browser',\n                other: true\n            }, {\n                regex: '(Opera Tablet).*Version/(\\\\d+)\\\\.(\\\\d+)(?:\\\\.(\\\\d+))?',\n                family_replacement: 'Opera Tablet',\n                tablet: true\n            }, {\n                regex: '(Opera)/.+Opera Mobi.+Version/(\\\\d+)\\\\.(\\\\d+)',\n                family_replacement: 'Opera Mobile'\n            }, {\n                regex: 'Opera Mobi',\n                family_replacement: 'Opera Mobile'\n            }, {\n                regex: '(Opera Mini)/(\\\\d+)\\\\.(\\\\d+)',\n                family_replacement: 'Opera Mini'\n            }, {\n                regex: '(Opera Mini)/att/(\\\\d+)\\\\.(\\\\d+)',\n                family_replacement: 'Opera Mini'\n            }, {\n                regex: '(Opera)/9.80.*Version/(\\\\d+)\\\\.(\\\\d+)(?:\\\\.(\\\\d+))?',\n                family_replacement: 'Opera'\n            }, {\n                regex: '(OPR)/(\\\\d+)\\\\.(\\\\d+)(?:\\\\.(\\\\d+))?',\n                family_replacement: 'Opera'\n            }, {\n                regex: '(webOSBrowser)/(\\\\d+)\\\\.(\\\\d+)',\n                family_replacement: 'webOS'\n            }, {\n                regex: '(webOS)/(\\\\d+)\\\\.(\\\\d+)',\n                family_replacement: 'webOS'\n            }, {\n                regex: '(wOSBrowser).+TouchPad/(\\\\d+)\\\\.(\\\\d+)',\n                family_replacement: 'webOS TouchPad'\n            }, {\n                regex: '(luakit)',\n                family_replacement: 'LuaKit',\n                other: true\n            }, {\n                regex: '(Lightning)/(\\\\d+)\\\\.(\\\\d+)([ab]?\\\\d+[a-z]*)',\n                family_replacement: 'Lightning',\n                other: true\n            }, {\n                regex: '(Firefox)/(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+(?:pre)?) \\\\(Swiftfox\\\\)',\n                family_replacement: 'Swiftfox',\n                other: true\n            }, {\n                regex: '(Firefox)/(\\\\d+)\\\\.(\\\\d+)([ab]\\\\d+[a-z]*)? \\\\(Swiftfox\\\\)',\n                family_replacement: 'Swiftfox',\n                other: true\n            }, {\n                regex: 'rekonq',\n                family_replacement: 'Rekonq',\n                other: true\n            }, {\n                regex: '(conkeror|Conkeror)/(\\\\d+)\\\\.(\\\\d+)\\\\.?(\\\\d+)?',\n                family_replacement: 'Conkeror',\n                other: true\n            }, {\n                regex: '(konqueror)/(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)',\n                family_replacement: 'Konqueror',\n                other: true\n            }, {\n                regex: '(WeTab)-Browser',\n                family_replacement: 'WeTab',\n                other: true\n            }, {\n                regex: '(Comodo_Dragon)/(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)',\n                family_replacement: 'Comodo Dragon',\n                other: true\n            }, {\n                regex: '(YottaaMonitor)',\n                family_replacement: 'Yottaa Monitor',\n                other: true\n            }, {\n                regex: '(Kindle)/(\\\\d+)\\\\.(\\\\d+)',\n                family_replacement: 'Kindle'\n            }, {\n                regex: '(Symphony) (\\\\d+).(\\\\d+)',\n                family_replacement: 'Symphony',\n                other: true\n            }, {\n                regex: 'Minimo',\n                family_replacement: 'Minimo',\n                other: true\n            }, {\n                regex: '(Edge)/(\\\\d+)\\\\.(\\\\d+)',\n                family_replacement: 'Edge'\n            }, {\n                regex: '(CrMo)/(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)',\n                family_replacement: 'Chrome Mobile'\n            }, {\n                regex: '(CriOS)/(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)',\n                family_replacement: 'Chrome Mobile iOS'\n            }, {\n                regex: '(Chrome)/(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+) Mobile',\n                family_replacement: 'Chrome Mobile'\n            }, {\n                regex: '(chromeframe)/(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)',\n                family_replacement: 'Chrome Frame'\n            }, {\n                regex: '(UC Browser)(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)',\n                family_replacement: 'UC Browser',\n                other: true\n            }, {\n                regex: '(SLP Browser)/(\\\\d+)\\\\.(\\\\d+)',\n                family_replacement: 'Tizen Browser',\n                other: true\n            }, {\n                regex: '(Epiphany)/(\\\\d+)\\\\.(\\\\d+).(\\\\d+)',\n                family_replacement: 'Epiphany',\n                other: true\n            }, {\n                regex: '(SE 2\\\\.X) MetaSr (\\\\d+)\\\\.(\\\\d+)',\n                family_replacement: 'Sogou Explorer',\n                other: true\n            }, {\n                regex: '(Pingdom.com_bot_version_)(\\\\d+)\\\\.(\\\\d+)',\n                family_replacement: 'PingdomBot',\n                other: true\n            }, {\n                regex: '(facebookexternalhit)/(\\\\d+)\\\\.(\\\\d+)',\n                family_replacement: 'FacebookBot'\n            }, {\n                regex: '(Twitterbot)/(\\\\d+)\\\\.(\\\\d+)',\n                family_replacement: 'TwitterBot'\n            }, {\n                regex: '(AdobeAIR|Chromium|FireWeb|Jasmine|ANTGalio|Midori|Fresco|Lobo|PaleMoon|Maxthon|Lynx|OmniWeb|Dillo|Camino|Demeter|Fluid|Fennec|Shiira|Sunrise|Chrome|Flock|Netscape|Lunascape|WebPilot|NetFront|Netfront|Konqueror|SeaMonkey|Kazehakase|Vienna|Iceape|Iceweasel|IceWeasel|Iron|K-Meleon|Sleipnir|Galeon|GranParadiso|Opera Mini|iCab|NetNewsWire|ThunderBrowse|Iron|Iris|UP\\\\.Browser|Bunjaloo|Google Earth|Raven for Mac)/(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)'\n            }, {\n                regex: '(Bolt|Jasmine|IceCat|Skyfire|Midori|Maxthon|Lynx|Arora|IBrowse|Dillo|Camino|Shiira|Fennec|Phoenix|Chrome|Flock|Netscape|Lunascape|Epiphany|WebPilot|Opera Mini|Opera|NetFront|Netfront|Konqueror|Googlebot|SeaMonkey|Kazehakase|Vienna|Iceape|Iceweasel|IceWeasel|Iron|K-Meleon|Sleipnir|Galeon|GranParadiso|iCab|NetNewsWire|Iron|Space Bison|Stainless|Orca|Dolfin|BOLT|Minimo|Tizen Browser|Polaris)/(\\\\d+)\\\\.(\\\\d+)'\n            }, {\n                regex: '(iRider|Crazy Browser|SkipStone|iCab|Lunascape|Sleipnir|Maemo Browser) (\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)'\n            }, {\n                regex: '(iCab|Lunascape|Opera|Android|Jasmine|Polaris|BREW) (\\\\d+)\\\\.(\\\\d+)\\\\.?(\\\\d+)?'\n            }, {\n                regex: '(Android) Donut',\n                v2_replacement: '2',\n                v1_replacement: '1'\n            }, {\n                regex: '(Android) Eclair',\n                v2_replacement: '1',\n                v1_replacement: '2'\n            }, {\n                regex: '(Android) Froyo',\n                v2_replacement: '2',\n                v1_replacement: '2'\n            }, {\n                regex: '(Android) Gingerbread',\n                v2_replacement: '3',\n                v1_replacement: '2'\n            }, {\n                regex: '(Android) Honeycomb',\n                v1_replacement: '3'\n            }, {\n                regex: '(IEMobile)[ /](\\\\d+)\\\\.(\\\\d+)',\n                family_replacement: 'IE Mobile'\n            }, {\n                regex: '(MSIE) (\\\\d+)\\\\.(\\\\d+).*XBLWP7',\n                family_replacement: 'IE Large Screen'\n            }, {\n                regex: '(Firefox)/(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)'\n            }, {\n                regex: '(Firefox)/(\\\\d+)\\\\.(\\\\d+)(pre|[ab]\\\\d+[a-z]*)?'\n            }, {\n                regex: '(Obigo)InternetBrowser',\n                other: true\n            }, {\n                regex: '(Obigo)\\\\-Browser',\n                other: true\n            }, {\n                regex: '(Obigo|OBIGO)[^\\\\d]*(\\\\d+)(?:.(\\\\d+))?',\n                other: true\n            }, {\n                regex: '(MAXTHON|Maxthon) (\\\\d+)\\\\.(\\\\d+)',\n                family_replacement: 'Maxthon',\n                other: true\n            }, {\n                regex: '(Maxthon|MyIE2|Uzbl|Shiira)',\n                v1_replacement: '0',\n                other: true\n            }, {\n                regex: '(PLAYSTATION) (\\\\d+)',\n                family_replacement: 'PlayStation',\n                manufacturer: 'Sony'\n            }, {\n                regex: '(PlayStation Portable)[^\\\\d]+(\\\\d+).(\\\\d+)',\n                manufacturer: 'Sony'\n            }, {\n                regex: '(BrowseX) \\\\((\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)',\n                other: true\n            }, {\n                regex: '(POLARIS)/(\\\\d+)\\\\.(\\\\d+)',\n                family_replacement: 'Polaris',\n                other: true\n            }, {\n                regex: '(Embider)/(\\\\d+)\\\\.(\\\\d+)',\n                family_replacement: 'Polaris',\n                other: true\n            }, {\n                regex: '(BonEcho)/(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)',\n                family_replacement: 'Bon Echo',\n                other: true\n            }, {\n                regex: '(iPod).+Version/(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)',\n                family_replacement: 'Mobile Safari',\n                manufacturer: 'Apple'\n            }, {\n                regex: '(iPod).*Version/(\\\\d+)\\\\.(\\\\d+)',\n                family_replacement: 'Mobile Safari',\n                manufacturer: 'Apple'\n            }, {\n                regex: '(iPod)',\n                family_replacement: 'Mobile Safari',\n                manufacturer: 'Apple'\n            }, {\n                regex: '(iPhone).*Version/(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)',\n                family_replacement: 'Mobile Safari',\n                manufacturer: 'Apple'\n            }, {\n                regex: '(iPhone).*Version/(\\\\d+)\\\\.(\\\\d+)',\n                family_replacement: 'Mobile Safari',\n                manufacturer: 'Apple'\n            }, {\n                regex: '(iPhone)',\n                family_replacement: 'Mobile Safari',\n                manufacturer: 'Apple'\n            }, {\n                regex: '(iPad).*Version/(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)',\n                family_replacement: 'Mobile Safari',\n                tablet: true,\n                manufacturer: 'Apple'\n            }, {\n                regex: '(iPad).*Version/(\\\\d+)\\\\.(\\\\d+)',\n                family_replacement: 'Mobile Safari',\n                tablet: true,\n                manufacturer: 'Apple'\n            }, {\n                regex: '(iPad)',\n                family_replacement: 'Mobile Safari',\n                tablet: true,\n                manufacturer: 'Apple'\n            }, {\n                regex: '(AvantGo) (\\\\d+).(\\\\d+)',\n                other: true\n            }, {\n                regex: '(Avant)',\n                v1_replacement: '1',\n                other: true\n            }, {\n                regex: '^(Nokia)',\n                family_replacement: 'Nokia Services (WAP) Browser',\n                manufacturer: 'Nokia'\n            }, {\n                regex: '(NokiaBrowser)/(\\\\d+)\\\\.(\\\\d+).(\\\\d+)\\\\.(\\\\d+)',\n                manufacturer: 'Nokia'\n            }, {\n                regex: '(NokiaBrowser)/(\\\\d+)\\\\.(\\\\d+).(\\\\d+)',\n                manufacturer: 'Nokia'\n            }, {\n                regex: '(NokiaBrowser)/(\\\\d+)\\\\.(\\\\d+)',\n                manufacturer: 'Nokia'\n            }, {\n                regex: '(BrowserNG)/(\\\\d+)\\\\.(\\\\d+).(\\\\d+)',\n                family_replacement: 'NokiaBrowser',\n                manufacturer: 'Nokia'\n            }, {\n                regex: '(Series60)/5\\\\.0',\n                v2_replacement: '0',\n                v1_replacement: '7',\n                family_replacement: 'NokiaBrowser',\n                manufacturer: 'Nokia'\n            }, {\n                regex: '(Series60)/(\\\\d+)\\\\.(\\\\d+)',\n                family_replacement: 'Nokia OSS Browser',\n                manufacturer: 'Nokia'\n            }, {\n                regex: '(S40OviBrowser)/(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)',\n                family_replacement: 'Nokia Series 40 Ovi Browser',\n                manufacturer: 'Nokia'\n            }, {\n                regex: '(Nokia)[EN]?(\\\\d+)',\n                manufacturer: 'Nokia'\n            }, {\n                regex: '(PlayBook).+RIM Tablet OS (\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)',\n                family_replacement: 'Blackberry WebKit',\n                tablet: true,\n                manufacturer: 'Nokia'\n            }, {\n                regex: '(Black[bB]erry).+Version/(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)',\n                family_replacement: 'Blackberry WebKit',\n                manufacturer: 'RIM'\n            }, {\n                regex: '(Black[bB]erry)\\\\s?(\\\\d+)',\n                family_replacement: 'Blackberry',\n                manufacturer: 'RIM'\n            }, {\n                regex: '(OmniWeb)/v(\\\\d+)\\\\.(\\\\d+)',\n                other: true\n            }, {\n                regex: '(Blazer)/(\\\\d+)\\\\.(\\\\d+)',\n                family_replacement: 'Palm Blazer',\n                manufacturer: 'Palm'\n            }, {\n                regex: '(Pre)/(\\\\d+)\\\\.(\\\\d+)',\n                family_replacement: 'Palm Pre',\n                manufacturer: 'Palm'\n            }, {\n                regex: '(Links) \\\\((\\\\d+)\\\\.(\\\\d+)',\n                other: true\n            }, {\n                regex: '(QtWeb) Internet Browser/(\\\\d+)\\\\.(\\\\d+)',\n                other: true\n            }, {\n                regex: '(Silk)/(\\\\d+)\\\\.(\\\\d+)(?:\\\\.([0-9\\\\-]+))?',\n                other: true,\n                tablet: true\n            }, {\n                regex: '(AppleWebKit)/(\\\\d+)\\\\.?(\\\\d+)?\\\\+ .* Version/\\\\d+\\\\.\\\\d+.\\\\d+ Safari/',\n                family_replacement: 'WebKit Nightly'\n            }, {\n                regex: '(Version)/(\\\\d+)\\\\.(\\\\d+)(?:\\\\.(\\\\d+))?.*Safari/',\n                family_replacement: 'Safari'\n            }, {\n                regex: '(Safari)/\\\\d+'\n            }, {\n                regex: '(OLPC)/Update(\\\\d+)\\\\.(\\\\d+)',\n                other: true\n            }, {\n                regex: '(OLPC)/Update()\\\\.(\\\\d+)',\n                v1_replacement: '0',\n                other: true\n            }, {\n                regex: '(SEMC\\\\-Browser)/(\\\\d+)\\\\.(\\\\d+)',\n                other: true\n            }, {\n                regex: '(Teleca)',\n                family_replacement: 'Teleca Browser',\n                other: true\n            }, {\n                regex: 'Trident(.*)rv.(\\\\d+)\\\\.(\\\\d+)',\n                family_replacement: 'IE'\n            }, {\n                regex: '(MSIE) (\\\\d+)\\\\.(\\\\d+)',\n                family_replacement: 'IE'\n            }],\n            os_parsers: [{\n                regex: '(Android) (\\\\d+)\\\\.(\\\\d+)(?:[.\\\\-]([a-z0-9]+))?'\n            }, {\n                regex: '(Android)\\\\-(\\\\d+)\\\\.(\\\\d+)(?:[.\\\\-]([a-z0-9]+))?'\n            }, {\n                regex: '(Android) Donut',\n                os_v2_replacement: '2',\n                os_v1_replacement: '1'\n            }, {\n                regex: '(Android) Eclair',\n                os_v2_replacement: '1',\n                os_v1_replacement: '2'\n            }, {\n                regex: '(Android) Froyo',\n                os_v2_replacement: '2',\n                os_v1_replacement: '2'\n            }, {\n                regex: '(Android) Gingerbread',\n                os_v2_replacement: '3',\n                os_v1_replacement: '2'\n            }, {\n                regex: '(Android) Honeycomb',\n                os_v1_replacement: '3'\n            }, {\n                regex: '(Silk-Accelerated=[a-z]{4,5})',\n                os_replacement: 'Android'\n            }, {\n                regex: '(Windows Phone 6\\\\.5)'\n            }, {\n                regex: '(Windows (?:NT 5\\\\.2|NT 5\\\\.1))',\n                os_replacement: 'Windows XP'\n            }, {\n                regex: '(XBLWP7)',\n                os_replacement: 'Windows Phone OS'\n            }, {\n                regex: '(Windows NT 6\\\\.1)',\n                os_replacement: 'Windows 7'\n            }, {\n                regex: '(Windows NT 6\\\\.0)',\n                os_replacement: 'Windows Vista'\n            }, {\n                regex: '(Windows 98|Windows XP|Windows ME|Windows 95|Windows CE|Windows 7|Windows NT 4\\\\.0|Windows Vista|Windows 2000)'\n            }, {\n                regex: '(Windows NT 6\\\\.4|Windows NT 10\\\\.0)',\n                os_replacement: 'Windows 10'\n            }, {\n                regex: '(Windows NT 6\\\\.2)',\n                os_replacement: 'Windows 8'\n            }, {\n                regex: '(Windows Phone 8)',\n                os_replacement: 'Windows Phone 8'\n            }, {\n                regex: '(Windows NT 5\\\\.0)',\n                os_replacement: 'Windows 2000'\n            }, {\n                regex: '(Windows Phone OS) (\\\\d+)\\\\.(\\\\d+)'\n            }, {\n                regex: '(Windows ?Mobile)',\n                os_replacement: 'Windows Mobile'\n            }, {\n                regex: '(WinNT4.0)',\n                os_replacement: 'Windows NT 4.0'\n            }, {\n                regex: '(Win98)',\n                os_replacement: 'Windows 98'\n            }, {\n                regex: '(Tizen)/(\\\\d+)\\\\.(\\\\d+)',\n                other: true\n            }, {\n                regex: '(Mac OS X) (\\\\d+)[_.](\\\\d+)(?:[_.](\\\\d+))?',\n                manufacturer: 'Apple'\n            }, {\n                regex: '(?:PPC|Intel) (Mac OS X)',\n                manufacturer: 'Apple'\n            }, {\n                regex: '(CPU OS|iPhone OS) (\\\\d+)_(\\\\d+)(?:_(\\\\d+))?',\n                os_replacement: 'iOS',\n                manufacturer: 'Apple'\n            }, {\n                regex: '(iPhone|iPad|iPod); Opera',\n                os_replacement: 'iOS',\n                manufacturer: 'Apple'\n            }, {\n                regex: '(iPad); Opera',\n                tablet: true,\n                manufacturer: 'Apple'\n            }, {\n                regex: '(iPhone|iPad|iPod).*Mac OS X.*Version/(\\\\d+)\\\\.(\\\\d+)',\n                os_replacement: 'iOS',\n                manufacturer: 'Apple'\n            }, {\n                regex: '(CrOS) [a-z0-9_]+ (\\\\d+)\\\\.(\\\\d+)(?:\\\\.(\\\\d+))?',\n                os_replacement: 'Chrome OS'\n            }, {\n                regex: '(Debian)-(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(?:\\\\.(\\\\d+))?',\n                other: true\n            }, {\n                regex: '(Linux Mint)(?:/(\\\\d+))?',\n                other: true\n            }, {\n                regex: '(Mandriva)(?: Linux)?/(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(?:\\\\.(\\\\d+))?',\n                other: true\n            }, {\n                regex: '(Symbian[Oo][Ss])/(\\\\d+)\\\\.(\\\\d+)',\n                os_replacement: 'Symbian OS'\n            }, {\n                regex: '(Symbian/3).+NokiaBrowser/7\\\\.3',\n                os_replacement: 'Symbian^3 Anna'\n            }, {\n                regex: '(Symbian/3).+NokiaBrowser/7\\\\.4',\n                os_replacement: 'Symbian^3 Belle'\n            }, {\n                regex: '(Symbian/3)',\n                os_replacement: 'Symbian^3'\n            }, {\n                regex: '(Series 60|SymbOS|S60)',\n                os_replacement: 'Symbian OS'\n            }, {\n                regex: '(MeeGo)',\n                other: true\n            }, {\n                regex: 'Symbian [Oo][Ss]',\n                os_replacement: 'Symbian OS'\n            }, {\n                regex: '(Black[Bb]erry)[0-9a-z]+/(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(?:\\\\.(\\\\d+))?',\n                os_replacement: 'BlackBerry OS',\n                manufacturer: 'RIM'\n            }, {\n                regex: '(Black[Bb]erry).+Version/(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(?:\\\\.(\\\\d+))?',\n                os_replacement: 'BlackBerry OS',\n                manufacturer: 'RIM'\n            }, {\n                regex: '(RIM Tablet OS) (\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)',\n                os_replacement: 'BlackBerry Tablet OS',\n                tablet: true,\n                manufacturer: 'RIM'\n            }, {\n                regex: '(Play[Bb]ook)',\n                os_replacement: 'BlackBerry Tablet OS',\n                tablet: true,\n                manufacturer: 'RIM'\n            }, {\n                regex: '(Black[Bb]erry)',\n                os_replacement: 'Blackberry OS',\n                manufacturer: 'RIM'\n            }, {\n                regex: '(webOS|hpwOS)/(\\\\d+)\\\\.(\\\\d+)(?:\\\\.(\\\\d+))?',\n                os_replacement: 'webOS'\n            }, {\n                regex: '(SUSE|Fedora|Red Hat|PCLinuxOS)/(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)',\n                other: true\n            }, {\n                regex: '(SUSE|Fedora|Red Hat|Puppy|PCLinuxOS|CentOS)/(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)',\n                other: true\n            }, {\n                regex: '(Ubuntu|Kindle|Bada|Lubuntu|BackTrack|Red Hat|Slackware)/(\\\\d+)\\\\.(\\\\d+)'\n            }, {\n                regex: '(Windows|OpenBSD|FreeBSD|NetBSD|Ubuntu|Kubuntu|Android|Arch Linux|CentOS|WeTab|Slackware)'\n            }, {\n                regex: '(Linux|BSD)',\n                other: true\n            }],\n            mobile_os_families: ['Windows Phone 6.5', 'Windows CE', 'Symbian OS'],\n            device_parsers: [{\n                regex: 'HTC ([A-Z][a-z0-9]+) Build',\n                device_replacement: 'HTC $1',\n                manufacturer: 'HTC'\n            }, {\n                regex: 'HTC ([A-Z][a-z0-9 ]+) \\\\d+\\\\.\\\\d+\\\\.\\\\d+\\\\.\\\\d+',\n                device_replacement: 'HTC $1',\n                manufacturer: 'HTC'\n            }, {\n                regex: 'HTC_Touch_([A-Za-z0-9]+)',\n                device_replacement: 'HTC Touch ($1)',\n                manufacturer: 'HTC'\n            }, {\n                regex: 'USCCHTC(\\\\d+)',\n                device_replacement: 'HTC $1 (US Cellular)',\n                manufacturer: 'HTC'\n            }, {\n                regex: 'Sprint APA(9292)',\n                device_replacement: 'HTC $1 (Sprint)',\n                manufacturer: 'HTC'\n            }, {\n                regex: 'HTC ([A-Za-z0-9]+ [A-Z])',\n                device_replacement: 'HTC $1',\n                manufacturer: 'HTC'\n            }, {\n                regex: 'HTC-([A-Za-z0-9]+)',\n                device_replacement: 'HTC $1',\n                manufacturer: 'HTC'\n            }, {\n                regex: 'HTC_([A-Za-z0-9]+)',\n                device_replacement: 'HTC $1',\n                manufacturer: 'HTC'\n            }, {\n                regex: 'HTC ([A-Za-z0-9]+)',\n                device_replacement: 'HTC $1',\n                manufacturer: 'HTC'\n            }, {\n                regex: '(ADR[A-Za-z0-9]+)',\n                device_replacement: 'HTC $1',\n                manufacturer: 'HTC'\n            }, {\n                regex: '(HTC)',\n                manufacturer: 'HTC'\n            }, {\n                regex: 'SonyEricsson([A-Za-z0-9]+)/',\n                device_replacement: 'Ericsson $1',\n                other: true,\n                manufacturer: 'Sony'\n            }, {\n                regex: 'Android[\\\\- ][\\\\d]+\\\\.[\\\\d]+\\\\; [A-Za-z]{2}\\\\-[A-Za-z]{2}\\\\; WOWMobile (.+) Build'\n            }, {\n                regex: 'Android[\\\\- ][\\\\d]+\\\\.[\\\\d]+\\\\.[\\\\d]+; [A-Za-z]{2}\\\\-[A-Za-z]{2}\\\\; (.+) Build'\n            }, {\n                regex: 'Android[\\\\- ][\\\\d]+\\\\.[\\\\d]+\\\\-update1\\\\; [A-Za-z]{2}\\\\-[A-Za-z]{2}\\\\; (.+) Build'\n            }, {\n                regex: 'Android[\\\\- ][\\\\d]+\\\\.[\\\\d]+\\\\; [A-Za-z]{2}\\\\-[A-Za-z]{2}\\\\; (.+) Build'\n            }, {\n                regex: 'Android[\\\\- ][\\\\d]+\\\\.[\\\\d]+\\\\.[\\\\d]+; (.+) Build'\n            }, {\n                regex: 'NokiaN([0-9]+)',\n                device_replacement: 'Nokia N$1',\n                manufacturer: 'Nokia'\n            }, {\n                regex: 'Nokia([A-Za-z0-9\\\\v-]+)',\n                device_replacement: 'Nokia $1',\n                manufacturer: 'Nokia'\n            }, {\n                regex: 'NOKIA ([A-Za-z0-9\\\\-]+)',\n                device_replacement: 'Nokia $1',\n                manufacturer: 'Nokia'\n            }, {\n                regex: 'Nokia ([A-Za-z0-9\\\\-]+)',\n                device_replacement: 'Nokia $1',\n                manufacturer: 'Nokia'\n            }, {\n                regex: 'Lumia ([A-Za-z0-9\\\\-]+)',\n                device_replacement: 'Lumia $1',\n                manufacturer: 'Nokia'\n            }, {\n                regex: 'Symbian',\n                device_replacement: 'Nokia',\n                manufacturer: 'Nokia'\n            }, {\n                regex: '(PlayBook).+RIM Tablet OS',\n                device_replacement: 'Blackberry Playbook',\n                tablet: true,\n                manufacturer: 'RIM'\n            }, {\n                regex: '(Black[Bb]erry [0-9]+);',\n                manufacturer: 'RIM'\n            }, {\n                regex: 'Black[Bb]erry([0-9]+)',\n                device_replacement: 'BlackBerry $1',\n                manufacturer: 'RIM'\n            }, {\n                regex: '(Pre)/(\\\\d+)\\\\.(\\\\d+)',\n                device_replacement: 'Palm Pre',\n                manufacturer: 'Palm'\n            }, {\n                regex: '(Pixi)/(\\\\d+)\\\\.(\\\\d+)',\n                device_replacement: 'Palm Pixi',\n                manufacturer: 'Palm'\n            }, {\n                regex: '(Touchpad)/(\\\\d+)\\\\.(\\\\d+)',\n                device_replacement: 'HP Touchpad',\n                manufacturer: 'HP'\n            }, {\n                regex: 'HPiPAQ([A-Za-z0-9]+)/(\\\\d+).(\\\\d+)',\n                device_replacement: 'HP iPAQ $1',\n                manufacturer: 'HP'\n            }, {\n                regex: 'Palm([A-Za-z0-9]+)',\n                device_replacement: 'Palm $1',\n                manufacturer: 'Palm'\n            }, {\n                regex: 'Treo([A-Za-z0-9]+)',\n                device_replacement: 'Palm Treo $1',\n                manufacturer: 'Palm'\n            }, {\n                regex: 'webOS.*(P160UNA)/(\\\\d+).(\\\\d+)',\n                device_replacement: 'HP Veer',\n                manufacturer: 'HP'\n            }, {\n                regex: '(Kindle Fire)',\n                manufacturer: 'Amazon'\n            }, {\n                regex: '(Kindle)',\n                manufacturer: 'Amazon'\n            }, {\n                regex: '(Silk)/(\\\\d+)\\\\.(\\\\d+)(?:\\\\.([0-9\\\\-]+))?',\n                device_replacement: 'Kindle Fire',\n                tablet: true,\n                manufacturer: 'Amazon'\n            }, {\n                regex: '(iPad) Simulator;',\n                manufacturer: 'Apple'\n            }, {\n                regex: '(iPad);',\n                manufacturer: 'Apple'\n            }, {\n                regex: '(iPod);',\n                manufacturer: 'Apple'\n            }, {\n                regex: '(iPhone) Simulator;',\n                manufacturer: 'Apple'\n            }, {\n                regex: '(iPhone);',\n                manufacturer: 'Apple'\n            }, {\n                regex: 'Nexus\\\\ ([A-Za-z0-9\\\\-]+)',\n                device_replacement: 'Nexus $1'\n            }, {\n                regex: 'acer_([A-Za-z0-9]+)_',\n                device_replacement: 'Acer $1',\n                manufacturer: 'Acer'\n            }, {\n                regex: 'acer_([A-Za-z0-9]+)_',\n                device_replacement: 'Acer $1',\n                manufacturer: 'Acer'\n            }, {\n                regex: 'Amoi\\\\-([A-Za-z0-9]+)',\n                device_replacement: 'Amoi $1',\n                other: true,\n                manufacturer: 'Amoi'\n            }, {\n                regex: 'AMOI\\\\-([A-Za-z0-9]+)',\n                device_replacement: 'Amoi $1',\n                other: true,\n                manufacturer: 'Amoi'\n            }, {\n                regex: 'Asus\\\\-([A-Za-z0-9]+)',\n                device_replacement: 'Asus $1',\n                manufacturer: 'Asus'\n            }, {\n                regex: 'ASUS\\\\-([A-Za-z0-9]+)',\n                device_replacement: 'Asus $1',\n                manufacturer: 'Asus'\n            }, {\n                regex: 'BIRD\\\\-([A-Za-z0-9]+)',\n                device_replacement: 'Bird $1',\n                other: true\n            }, {\n                regex: 'BIRD\\\\.([A-Za-z0-9]+)',\n                device_replacement: 'Bird $1',\n                other: true\n            }, {\n                regex: 'BIRD ([A-Za-z0-9]+)',\n                device_replacement: 'Bird $1',\n                other: true\n            }, {\n                regex: 'Dell ([A-Za-z0-9]+)',\n                device_replacement: 'Dell $1',\n                manufacturer: 'Dell'\n            }, {\n                regex: 'DoCoMo/2\\\\.0 ([A-Za-z0-9]+)',\n                device_replacement: 'DoCoMo $1',\n                other: true\n            }, {\n                regex: '([A-Za-z0-9]+)\\\\_W\\\\;FOMA',\n                device_replacement: 'DoCoMo $1',\n                other: true\n            }, {\n                regex: '([A-Za-z0-9]+)\\\\;FOMA',\n                device_replacement: 'DoCoMo $1',\n                other: true\n            }, {\n                regex: 'vodafone([A-Za-z0-9]+)',\n                device_replacement: 'Huawei Vodafone $1',\n                other: true\n            }, {\n                regex: 'i\\\\-mate ([A-Za-z0-9]+)',\n                device_replacement: 'i-mate $1',\n                other: true\n            }, {\n                regex: 'Kyocera\\\\-([A-Za-z0-9]+)',\n                device_replacement: 'Kyocera $1',\n                other: true\n            }, {\n                regex: 'KWC\\\\-([A-Za-z0-9]+)',\n                device_replacement: 'Kyocera $1',\n                other: true\n            }, {\n                regex: 'Lenovo\\\\-([A-Za-z0-9]+)',\n                device_replacement: 'Lenovo $1',\n                manufacturer: 'Lenovo'\n            }, {\n                regex: 'Lenovo\\\\_([A-Za-z0-9]+)',\n                device_replacement: 'Lenovo $1',\n                manufacturer: 'Levovo'\n            }, {\n                regex: 'LG/([A-Za-z0-9]+)',\n                device_replacement: 'LG $1',\n                manufacturer: 'LG'\n            }, {\n                regex: 'LG-LG([A-Za-z0-9]+)',\n                device_replacement: 'LG $1',\n                manufacturer: 'LG'\n            }, {\n                regex: 'LGE-LG([A-Za-z0-9]+)',\n                device_replacement: 'LG $1',\n                manufacturer: 'LG'\n            }, {\n                regex: 'LGE VX([A-Za-z0-9]+)',\n                device_replacement: 'LG $1',\n                manufacturer: 'LG'\n            }, {\n                regex: 'LG ([A-Za-z0-9]+)',\n                device_replacement: 'LG $1',\n                manufacturer: 'LG'\n            }, {\n                regex: 'LGE LG\\\\-AX([A-Za-z0-9]+)',\n                device_replacement: 'LG $1',\n                manufacturer: 'LG'\n            }, {\n                regex: 'LG\\\\-([A-Za-z0-9]+)',\n                device_replacement: 'LG $1',\n                manufacturer: 'LG'\n            }, {\n                regex: 'LGE\\\\-([A-Za-z0-9]+)',\n                device_replacement: 'LG $1',\n                manufacturer: 'LG'\n            }, {\n                regex: 'LG([A-Za-z0-9]+)',\n                device_replacement: 'LG $1',\n                manufacturer: 'LG'\n            }, {\n                regex: '(KIN)\\\\.One (\\\\d+)\\\\.(\\\\d+)',\n                device_replacement: 'Microsoft $1'\n            }, {\n                regex: '(KIN)\\\\.Two (\\\\d+)\\\\.(\\\\d+)',\n                device_replacement: 'Microsoft $1'\n            }, {\n                regex: '(Motorola)\\\\-([A-Za-z0-9]+)',\n                manufacturer: 'Motorola'\n            }, {\n                regex: 'MOTO\\\\-([A-Za-z0-9]+)',\n                device_replacement: 'Motorola $1',\n                manufacturer: 'Motorola'\n            }, {\n                regex: 'MOT\\\\-([A-Za-z0-9]+)',\n                device_replacement: 'Motorola $1',\n                manufacturer: 'Motorola'\n            }, {\n                regex: 'Philips([A-Za-z0-9]+)',\n                device_replacement: 'Philips $1',\n                manufacturer: 'Philips'\n            }, {\n                regex: 'Philips ([A-Za-z0-9]+)',\n                device_replacement: 'Philips $1',\n                manufacturer: 'Philips'\n            }, {\n                regex: 'SAMSUNG-([A-Za-z0-9\\\\-]+)',\n                device_replacement: 'Samsung $1',\n                manufacturer: 'Samsung'\n            }, {\n                regex: 'SAMSUNG\\\\; ([A-Za-z0-9\\\\-]+)',\n                device_replacement: 'Samsung $1',\n                manufacturer: 'Samsung'\n            }, {\n                regex: 'Softbank/1\\\\.0/([A-Za-z0-9]+)',\n                device_replacement: 'Softbank $1',\n                other: true\n            }, {\n                regex: 'Softbank/2\\\\.0/([A-Za-z0-9]+)',\n                device_replacement: 'Softbank $1',\n                other: true\n            }, {\n                regex: '(hiptop|avantgo|plucker|xiino|blazer|elaine|up.browser|up.link|mmp|smartphone|midp|wap|vodafone|o2|pocket|mobile|pda)',\n                device_replacement: 'Generic Smartphone'\n            }, {\n                regex: '^(1207|3gso|4thp|501i|502i|503i|504i|505i|506i|6310|6590|770s|802s|a wa|acer|acs\\\\-|airn|alav|asus|attw|au\\\\-m|aur |aus |abac|acoo|aiko|alco|alca|amoi|anex|anny|anyw|aptu|arch|argo|bell|bird|bw\\\\-n|bw\\\\-u|beck|benq|bilb|blac|c55/|cdm\\\\-|chtm|capi|comp|cond|craw|dall|dbte|dc\\\\-s|dica|ds\\\\-d|ds12|dait|devi|dmob|doco|dopo|el49|erk0|esl8|ez40|ez60|ez70|ezos|ezze|elai|emul|eric|ezwa|fake|fly\\\\-|fly\\\\_|g\\\\-mo|g1 u|g560|gf\\\\-5|grun|gene|go.w|good|grad|hcit|hd\\\\-m|hd\\\\-p|hd\\\\-t|hei\\\\-|hp i|hpip|hs\\\\-c|htc |htc\\\\-|htca|htcg)',\n                device_replacement: 'Generic Feature Phone'\n            }, {\n                regex: '^(htcp|htcs|htct|htc\\\\_|haie|hita|huaw|hutc|i\\\\-20|i\\\\-go|i\\\\-ma|i230|iac|iac\\\\-|iac/|ig01|im1k|inno|iris|jata|java|kddi|kgt|kgt/|kpt |kwc\\\\-|klon|lexi|lg g|lg\\\\-a|lg\\\\-b|lg\\\\-c|lg\\\\-d|lg\\\\-f|lg\\\\-g|lg\\\\-k|lg\\\\-l|lg\\\\-m|lg\\\\-o|lg\\\\-p|lg\\\\-s|lg\\\\-t|lg\\\\-u|lg\\\\-w|lg/k|lg/l|lg/u|lg50|lg54|lge\\\\-|lge/|lynx|leno|m1\\\\-w|m3ga|m50/|maui|mc01|mc21|mcca|medi|meri|mio8|mioa|mo01|mo02|mode|modo|mot |mot\\\\-|mt50|mtp1|mtv |mate|maxo|merc|mits|mobi|motv|mozz|n100|n101|n102|n202|n203|n300|n302|n500|n502|n505|n700|n701|n710|nec\\\\-|nem\\\\-|newg|neon)',\n                device_replacement: 'Generic Feature Phone'\n            }, {\n                regex: '^(netf|noki|nzph|o2 x|o2\\\\-x|opwv|owg1|opti|oran|ot\\\\-s|p800|pand|pg\\\\-1|pg\\\\-2|pg\\\\-3|pg\\\\-6|pg\\\\-8|pg\\\\-c|pg13|phil|pn\\\\-2|pt\\\\-g|palm|pana|pire|pock|pose|psio|qa\\\\-a|qc\\\\-2|qc\\\\-3|qc\\\\-5|qc\\\\-7|qc07|qc12|qc21|qc32|qc60|qci\\\\-|qwap|qtek|r380|r600|raks|rim9|rove|s55/|sage|sams|sc01|sch\\\\-|scp\\\\-|sdk/|se47|sec\\\\-|sec0|sec1|semc|sgh\\\\-|shar|sie\\\\-|sk\\\\-0|sl45|slid|smb3|smt5|sp01|sph\\\\-|spv |spv\\\\-|sy01|samm|sany|sava|scoo|send|siem|smar|smit|soft|sony|t\\\\-mo|t218|t250|t600|t610|t618|tcl\\\\-|tdg\\\\-|telm|tim\\\\-|ts70|tsm\\\\-|tsm3|tsm5|tx\\\\-9|tagt)',\n                device_replacement: 'Generic Feature Phone'\n            }, {\n                regex: '^(talk|teli|topl|tosh|up.b|upg1|utst|v400|v750|veri|vk\\\\-v|vk40|vk50|vk52|vk53|vm40|vx98|virg|vite|voda|vulc|w3c |w3c\\\\-|wapj|wapp|wapu|wapm|wig |wapi|wapr|wapv|wapy|wapa|waps|wapt|winc|winw|wonu|x700|xda2|xdag|yas\\\\-|your|zte\\\\-|zeto|aste|audi|avan|blaz|brew|brvw|bumb|ccwa|cell|cldc|cmd\\\\-|dang|eml2|fetc|hipt|http|ibro|idea|ikom|ipaq|jbro|jemu|jigs|keji|kyoc|kyok|libw|m\\\\-cr|midp|mmef|moto|mwbp|mywa|newt|nok6|o2im|pant|pdxg|play|pluc|port|prox|rozo|sama|seri|smal|symb|treo|upsi|vx52|vx53|vx60|vx61|vx70|vx80|vx81|vx83|vx85|wap\\\\-|webc|whit|wmlb|xda\\\\-|xda\\\\_)',\n                device_replacement: 'Generic Feature Phone'\n            }, {\n                regex: '(bot|borg|google(^tv)|yahoo|slurp|msnbot|msrbot|openbot|archiver|netresearch|lycos|scooter|altavista|teoma|gigabot|baiduspider|blitzbot|oegp|charlotte|furlbot|http%20client|polybot|htdig|ichiro|mogimogi|larbin|pompos|scrubby|searchsight|seekbot|semanticdiscovery|silk|snappy|speedy|spider|voila|vortex|voyager|zao|zeal|fast\\\\-webcrawler|converacrawler|dataparksearch|findlinks)',\n                device_replacement: 'Spider'\n            }],\n            mobile_browser_families: ['Firefox Mobile', 'Opera Mobile', 'Opera Mini', 'Mobile Safari', 'webOS', 'IE Mobile', 'Playstation Portable', 'Nokia', 'Blackberry', 'Palm', 'Silk', 'Android', 'Maemo', 'Obigo', 'Netfront', 'AvantGo', 'Teleca', 'SEMC-Browser', 'Bolt', 'Iris', 'UP.Browser', 'Symphony', 'Minimo', 'Bunjaloo', 'Jasmine', 'Dolfin', 'Polaris', 'BREW', 'Chrome Mobile', 'Chrome Mobile iOS', 'UC Browser', 'Tizen Browser']\n        }\n        // Parsers\n        _this.parsers = ['device_parsers', 'browser_parsers', 'os_parsers', 'mobile_os_families', 'mobile_browser_families']\n        // Types\n        _this.types = ['browser', 'os', 'device']\n        // Regular Expressions\n        _this.regexes = regexes || (function () {\n            const results = {}\n            _this.parsers.map((parser) => {\n                results[parser] = []\n            })\n            return results\n        }())\n        // Families\n        _this.families = (function () {\n            const results = {}\n            _this.types.map((type) => {\n                results[type] = []\n            })\n            return results\n        }())\n        // Utility Variables\n        let ArrayProto = Array.prototype,\n            ObjProto = Object.prototype,\n            FuncProto = Function.prototype,\n            nativeForEach = ArrayProto.forEach,\n            nativeIndexOf = ArrayProto.indexOf\n        // Find Utility\n        const find = function (ua, obj) {\n            let ret = {}\n            for (let i = 0; i < obj.length; i++) {\n                ret = obj[i](ua)\n                if (ret) {\n                    break\n                }\n            }\n            return ret\n        }\n        // Remove Utility\n        const remove = function (arr, props) {\n            each(arr, (obj) => {\n                each(props, (prop) => {\n                    delete obj[prop]\n                })\n            })\n        }\n        // Contains Utility\n        const contains = function (obj, target) {\n            let found = false\n            if (obj == null) return found\n            if (nativeIndexOf && obj.indexOf === nativeIndexOf) return obj.indexOf(target) != -1\n            found = any(obj, (value) => value === target)\n            return found\n        }\n        // Each Utility\n        let forEach\n        var each = forEach = function (obj, iterator, context) {\n            if (obj == null) return\n            if (nativeForEach && obj.forEach === nativeForEach) {\n                obj.forEach(iterator, context)\n            } else if (obj.length === +obj.length) {\n                for (let i = 0, l = obj.length; i < l; i++) {\n                    iterator.call(context, obj[i], i, obj)\n                }\n            } else {\n                for (const key in obj) {\n                    if (_.has(obj, key)) {\n                        iterator.call(context, obj[key], key, obj)\n                    }\n                }\n            }\n        }\n        // Extend Utiltiy\n        const extend = function (obj) {\n            each(slice.call(arguments, 1), (source) => {\n                for (const prop in source) {\n                    obj[prop] = source[prop]\n                }\n            })\n            return obj\n        }\n        // Check String Utility\n        const check = function (str) {\n            return !!(str && typeof str !== 'undefined' && str != null)\n        }\n        // To Version String Utility\n        const toVersionString = function (obj) {\n            let output = ''\n            obj = obj || {}\n            if (check(obj)) {\n                if (check(obj.major)) {\n                    output += obj.major\n                    if (check(obj.minor)) {\n                        output += '.' + obj.minor\n                        if (check(obj.patch)) {\n                            output += '.' + obj.patch\n                        }\n                    }\n                }\n            }\n            return output\n        }\n        // To String Utility\n        const toString = function (obj) {\n            obj = obj || {}\n            let suffix = toVersionString(obj)\n            if (suffix) suffix = ' ' + suffix\n            return obj && check(obj.family) ? obj.family + suffix : ''\n        }\n        // Parse User-Agent String\n        _this.parse = function (ua) {\n            // Parsers Utility\n            const parsers = function (type) {\n                return _this.regexes[type + '_parsers'].map((obj) => {\n                    let regexp = new RegExp(obj.regex),\n                        rep = obj[(type === 'browser' ? 'family' : type) + '_replacement'],\n                        major_rep = obj.major_version_replacement\n                    function parser(ua) {\n                        const m = ua.match(regexp)\n                        if (!m) return null\n                        const ret = {}\n                        ret.family = (rep ? rep.replace('$1', m[1]) : m[1]) || 'other'\n                        ret.major = parseInt(major_rep || m[2]) || null\n                        ret.minor = m[3] ? parseInt(m[3]) : null\n                        ret.patch = m[4] ? parseInt(m[4]) : null\n                        ret.tablet = obj.tablet\n                        ret.man = obj.manufacturer || null\n                        return ret\n                    }\n                    return parser\n                })\n            }\n            // User Agent\n            const UserAgent = function () {}\n            // Browsers Parsed\n            const browser_parsers = parsers('browser')\n            // Operating Systems Parsed\n            const os_parsers = parsers('os')\n            // Devices Parsed\n            const device_parsers = parsers('device')\n            // Set Agent\n            const a = new UserAgent()\n            // Remember the original user agent string\n            a.source = ua\n            // Set Browser\n            a.browser = find(ua, browser_parsers)\n            if (check(a.browser)) {\n                a.browser.name = toString(a.browser)\n                a.browser.version = toVersionString(a.browser)\n            } else {\n                a.browser = {}\n            }\n            // Set OS\n            a.os = find(ua, os_parsers)\n            if (check(a.os)) {\n                a.os.name = toString(a.os)\n                a.os.version = toVersionString(a.os)\n            } else {\n                a.os = {}\n            }\n            // Set Device\n            a.device = find(ua, device_parsers)\n            if (check(a.device)) {\n                a.device.name = toString(a.device)\n                a.device.version = toVersionString(a.device)\n            } else {\n                a.device = {\n                    tablet: false,\n                    family: 'Other'\n                }\n            }\n            // Determine Device Type\n            const mobile_agents = {}\n            const mobile_browser_families = _this.regexes.mobile_browser_families.map((str) => {\n                mobile_agents[str] = true\n            })\n            const mobile_os_families = _this.regexes.mobile_os_families.map((str) => {\n                mobile_agents[str] = true\n            })\n            // Is Spider\n            if (a.browser.family === 'Spider') {\n                a.device.type = 'Spider'\n            } else if (a.browser.tablet || a.os.tablet || a.device.tablet) {\n                a.device.type = 'Tablet'\n            } else if (mobile_agents.hasOwnProperty(a.browser.family)) {\n                a.device.type = 'Mobile'\n            } else {\n                a.device.type = 'Desktop'\n            }\n            // Determine Device Manufacturer\n            a.device.manufacturer = a.browser.man || a.os.man || a.device.man || null\n            // Cleanup Objects\n            remove([a.browser, a.os, a.device], ['tablet', 'man'])\n            // Return Agent\n            return a\n        }\n        // Return context\n        return _this\n    }())\n    // Export the Underscore object for **Node.js** and **\"CommonJS\"**,\n    // backwards-compatibility for the old `require()` API. If we're not\n    // CommonJS, add `_` to the global object via a string identifier\n    // the Closure Compiler \"advanced\" mode. Registration as an AMD\n    // via define() happens at the end of this file\n    if (typeof exports !== 'undefined') {\n        if (typeof module !== 'undefined' && module.exports) {\n            exports = module.exports = detect\n        }\n        exports.detect = detect\n    } else {\n        root.detect = detect\n    }\n    // AMD define happens at the end for compatibility with AMD\n    // that don't enforce next-turn semantics on modules\n    if (typeof define === 'function' && define.amd) {\n        define((require) => detect)\n    }\n}(window))\n","import detect from './detect';\nimport html from './browser';\n\nif (process.env.NODE_ENV !== 'test') {\n    window.UserAgent = detect.parse(navigator.userAgent);\n}\n\nconst browsersContol = {\n    browserVerify() {\n        const userBrowser = {\n            browserName: window.UserAgent.browser.family,\n            browserVersion: window.UserAgent.browser.version,\n            source: window.UserAgent.source,\n        };\n        const isIe = userBrowser.browserName === 'IE';\n\n        const nodeElement = document.createElement('div');\n        nodeElement.setAttribute('id', 'for_bad_users');\n        nodeElement.innerHTML = html;\n\n        const allowedBrowsers = [\n            {\n                name: 'Chrome',\n                minVersion: '21',\n            },\n            {\n                name: 'IE',\n                minVersion: '11',\n            },\n            {\n                name: 'Firefox',\n                minVersion: '18',\n            },\n            {\n                name: 'Opera',\n                minVersion: '17',\n            },\n            {\n                name: 'Safari',\n                minVersion: '6.1',\n            },\n        ];\n\n        const isNotAllowedBrowser = process.env.NODE_ENV === 'test' ? false : allowedBrowsers.some(\n            (chackBrowser) => chackBrowser.name === userBrowser.browserName && +chackBrowser.minVersion > +userBrowser.browserVersion,\n        );\n\n        return {\n            isNotAllowedBrowser,\n            nodeElement,\n            isIe,\n            userBrowser,\n        };\n    },\n};\n\nexport default browsersContol;\n","export default '<h1>UnacceptableBrowser</h1>';\n","import 'core-js';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Router} from 'react-router-dom';\n\nimport history from 'tools/history';\n\nimport store from 'stores';\n\nimport {environment} from 'configs';\nimport {setStore} from 'tools/connect';\n\nimport browserContols from './tools/browsers-control/index';\nimport * as serviceWorker from './serviceWorker';\n\nimport AppContainer from './containers/AppContainer';\n\nsetStore(store);\n\nif (environment !== 'production') {\n    window.store = store;\n    const makeInspectable = require('mobx-devtools-mst'); // eslint-disable-line\n    makeInspectable.default(store);\n}\n\nexport const browserVerify = browserContols.browserVerify();\n\nconst APP_ROOT_ID = 'application_root';\n\nexport function renderApp(App: React.FC<{}>) {\n    ReactDOM.render((\n        <Router history={history}>\n            <App />\n        </Router>\n    ), document.getElementById(APP_ROOT_ID));\n}\n\nif (browserVerify.isNotAllowedBrowser) {\n    document.body.appendChild(browserVerify.nodeElement);\n} else {\n    renderApp(AppContainer);\n}\n\nif (environment !== 'production' && module.hot) {\n    module.hot.accept('./containers/AppContainer', () => {\n        // eslint-disable-next-line\n        const NextApp = require('./containers/AppContainer').default;\n        renderApp(NextApp);\n    });\n}\n\n/** Uncomment if wanna service worker\n\nif (environment === 'production') {\n    serviceWorker.register();\n}\n\n*/\n","import {types, Instance, SnapshotIn, SnapshotOut} from 'mobx-state-tree';\n\nconst ViewItem = types\n    .model('ViewItem', {\n        id: types.string,\n        title: types.optional(types.string, ''),\n        number: types.maybeNull(types.number),\n        action: types.optional(types.string, ''),\n    });\n\nexport interface ViewItemModel extends Instance<typeof ViewItem> {}\nexport interface ViewItemSnapshotOut extends SnapshotOut<typeof ViewItem> {}\nexport interface ViewItemSnapshotIn extends SnapshotIn<typeof ViewItem> {}\n\nexport default ViewItem;\n","import {types, cast, Instance, SnapshotIn, SnapshotOut} from 'mobx-state-tree';\n\nimport history from 'tools/history';\nimport ViewItem, {ViewItemModel} from './viewItem';\n\nexport const SEARCH = 'SEARCH';\nexport const CATALOG = 'CATALOG';\nexport const CART = 'CART';\nexport const MAP = 'MAP';\n\nexport const routes = {\n    [SEARCH]: '/search',\n    [CATALOG]: '/catalog',\n    [CART]: '/cart',\n    [MAP]: '/map',\n};\n\nconst Ui = types\n    .model('Ui', {\n        page: types.optional(types.enumeration(Object.values(routes)), routes.CATALOG),\n        previous: types.maybeNull(types.enumeration(Object.values(routes))),\n        isLoading: types.optional(types.boolean, true),\n        viewItems: types.array(ViewItem),\n        visibles: types.array(types.string),\n    })\n    .actions((self) => {\n        const ui = self;\n\n        const setItem = (item: ViewItemModel): void => {\n            console.log(':: Register item: ', item.id);\n            ui.viewItems.push(item);\n        };\n\n        const removeItem = (id: string): void => {\n            console.log(':: Unregister item: ', id);\n            ui.viewItems = cast(ui.viewItems.filter((item) => id !== item.id));\n        };\n\n        const gotoPage = (to: string) => {\n            ui.previous = ui.page;\n            ui.page = to;\n            history.push(to);\n        };\n\n        const setVisible = (itemId: string): void => {\n            ui.visibles.push(itemId);\n        };\n\n        const removeVisible = (itemId: string): void => {\n            ui.visibles.splice(ui.visibles.indexOf(itemId), 1);\n        };\n\n        const getIndex = (itemId: string): number => {\n            return ui.visibles.indexOf(itemId) + 1;\n        };\n\n        return {\n            setItem,\n            removeItem,\n            gotoPage,\n            setVisible,\n            removeVisible,\n            getIndex,\n        };\n    });\n\nexport interface UiModel extends Instance<typeof Ui> {}\nexport interface UiSnapshotOut extends SnapshotOut<typeof Ui> {}\nexport interface UiSnapshotIn extends SnapshotIn<typeof Ui> {}\n\nexport default Ui;\n","import {createHashHistory} from 'history';\nimport pkg from '../../package.json';\n\nexport default createHashHistory({basename: pkg.homepage});\n","export const USER_MOCK = {\n    address: 'Кутузовский проспект, 32',\n    location: 'корпус Г, подъезд 2',\n};\n\nexport const PRODUCTS_MOCK = {\n    title: 'Фрукты',\n    items: [\n        {\n            id: '1',\n            name: 'Большой соленый сет',\n            clearName: 'Большой соленый сет',\n            guid: '32ff0d82c-681c-11e9-80c5-0cc47a817925',\n            imagesUrls: [\n                'https://d.radikal.ru/d16/2004/ba/9645c94cae36.png',\n            ],\n            price: 200,\n        },\n        {\n            id: '2',\n            name: 'Капуста капустная | русская, 100 г',\n            clearName: 'Горчица Столичная',\n            guid: '32e5b884-fa98-11e8-80c5-0cc47a817925',\n            imagesUrls: [\n                'https://static-eu.insales.ru/images/products/1/1746/295085778/1583447753704_15832238436181.jpg',\n                'https://static-eu.insales.ru/images/products/1/2173/279742589/19_100Г_ГОРЧИЦА_СТОЛИЧНАЯ_РУС._.jpg',\n            ],\n            price: 200,\n        },\n        {\n            id: '3',\n            name: 'Яства вкусные, 200 г',\n            clearName: 'Горчица Столичная',\n            guid: '12e5b884-fa98-11e8-80c5-0cc47a817925',\n            imagesUrls: [\n                'https://static-eu.insales.ru/images/products/1/2173/279742589/19_100Г_ГОРЧИЦА_СТОЛИЧНАЯ_РУС._.jpg',\n            ],\n            price: 200,\n        },\n        {\n            id: '4',\n            name: 'Пища богов, не иначе',\n            clearName: 'Горчица Столичная',\n            guid: '12e5b884-fa98-11e8-80c5-0dc47a817925',\n            imagesUrls: [\n                'https://static-eu.insales.ru/images/products/1/2173/279742589/19_100Г_ГОРЧИЦА_СТОЛИЧНАЯ_РУС._.jpg',\n            ],\n            price: 123,\n        },\n        {\n            id: '5',\n            name: 'Пища богов, не иначе',\n            clearName: 'Горчица Столичная',\n            guid: '1235b884-fa98-11e8-80c5-0dc47a817925',\n            imagesUrls: [\n                'https://static-eu.insales.ru/images/products/1/2173/279742589/19_100Г_ГОРЧИЦА_СТОЛИЧНАЯ_РУС._.jpg',\n            ],\n            price: 123,\n        },\n        // {\n        //     id: '2',\n        //     title: 'Ананас, невероятно вкусны, попробуй',\n        //     weight: '2.1 Кг',\n        //     price: 400,\n        //     imageSrc: 'http://placehold.it/165x165',\n        //     imageAlt: 'картинка',\n        //     discountPercent: '50',\n        //     oldPrice: 800,\n        //     index: 2,\n        // },\n        // {\n        //     id: '3',\n        //     title: 'Вкуснота же',\n        //     weight: '666 р',\n        //     price: 666,\n        //     imageSrc: 'http://placehold.it/165x165',\n        //     imageAlt: 'картинка',\n        //     discountPercent: null,\n        //     oldPrice: null,\n        //     index: 3,\n        // },\n        // {\n        //     id: '11',\n        //     title: 'Авокадо',\n        //     weight: '120 г',\n        //     price: 120,\n        //     imageSrc: 'http://placehold.it/165x165',\n        //     imageAlt: 'картинка',\n        //     discountPercent: null,\n        //     oldPrice: null,\n        //     index: 4,\n        // },\n        // {\n        //     id: '21',\n        //     title: 'Ананас',\n        //     weight: '2.1 Кг',\n        //     price: 400,\n        //     imageSrc: 'http://placehold.it/165x165',\n        //     imageAlt: 'картинка',\n        //     discountPercent: '50',\n        //     oldPrice: 800,\n        //     index: 5,\n        // },\n        // {\n        //     id: '31',\n        //     title: 'Вкуснота же',\n        //     weight: '666 р',\n        //     price: 666,\n        //     imageSrc: 'http://placehold.it/165x165',\n        //     imageAlt: 'картинка',\n        //     discountPercent: null,\n        //     oldPrice: null,\n        //     index: 6,\n        // },\n    ],\n};\n","import {types, Instance, SnapshotIn, SnapshotOut} from 'mobx-state-tree';\n\nconst User = types\n    .model('User', {\n        address: types.maybeNull(types.string),\n        location: types.maybeNull(types.string),\n    });\n\nexport default User;\n\nexport interface UserSnapshotOut extends SnapshotOut<typeof User> {}\nexport interface UserSnapshotIn extends SnapshotIn<typeof User> {}\nexport interface UserModel extends Instance<typeof User> {}\n","import {types, Instance, SnapshotIn, SnapshotOut} from 'mobx-state-tree';\n\nconst ProductItem = types\n    .model('Product', {\n        id: types.identifier,\n        name: types.string,\n        clearName: types.string,\n        price: types.number,\n        imagesUrls: types.array(types.string),\n        index: types.maybeNull(types.number),\n        visible: types.maybeNull(types.boolean),\n    });\n\nexport default ProductItem;\n\nexport interface ProductItemSnapshotOut extends SnapshotOut<typeof ProductItem> {}\nexport interface ProductItemSnapshotIn extends SnapshotIn<typeof ProductItem> {}\nexport interface ProductItemModel extends Instance<typeof ProductItem> {}\n","import {types, Instance, SnapshotIn, SnapshotOut} from 'mobx-state-tree';\n\nimport ProductItem, {ProductItemModel} from './product';\n\nconst Products = types\n    .model('Products', {\n        title: types.optional(types.string, ''),\n        items: types.array(ProductItem),\n        selectedId: types.maybeNull(types.string),\n    })\n    .actions((self) => {\n        const products = self;\n        const setVisibility = (item: ProductItemModel, value: boolean, index: number | null): void => {\n            item.visible = value;\n            item.index = index;\n        };\n\n        const selectItem = (itemId: string): void => {\n            if (products.items.find((item) => item.id === itemId)) {\n                products.selectedId = itemId;\n            }\n        };\n        \n        return {\n            setVisibility,\n            selectItem,\n        };\n    });\n\nexport default Products;\n\n\nexport interface ProductsModel extends Instance<typeof Products> {}\nexport interface ProductsSnapshotOut extends SnapshotOut<typeof Products> {}\nexport interface ProductsSnapshotIn extends SnapshotIn<typeof Products> {}\n","import {types, Instance, SnapshotIn, SnapshotOut} from 'mobx-state-tree';\nimport ProductItem, {ProductItemModel} from './product';\n\nconst Cart = types\n    .model('Cart', {\n        items: types.array(types.reference(ProductItem)),\n    })\n    .views((self) => ({\n        get count(): number {\n            return self.items.length;\n        },\n\n        get totalPrice(): number {\n            return self.items.reduce((acc: number, item: ProductItemModel) => {\n                return acc + item.price;\n            }, 0);\n        },\n\n        get itemsMap(): {[key: string]: Array<ProductItemModel>} {\n            return self.items.reduce((acc: {[key: string]: Array<ProductItemModel>}, item: ProductItemModel) => {\n                acc[item.id] = acc[item.id] || [];\n                acc[item.id].push(item);\n                return acc;\n            }, {});\n        },\n    }))\n    .actions((self) => {\n        const cart = self;\n\n        const addToCart = (itemId: string): void => {\n            cart.items.push(itemId);\n        };\n\n        const removeFromCart = (itemId: string): void => {\n            const items: Array<string> = cart.items.map(({id}) => id);\n            const index = items.indexOf(itemId);\n            if (index !== -1) {\n                cart.items.splice(index, 1);\n            }\n        };\n\n        return {\n            addToCart,\n            removeFromCart,\n        };\n    });\n\nexport interface CartModel extends Instance<typeof Cart> {}\nexport interface CartSnapshotOut extends SnapshotOut<typeof Cart> {}\nexport interface CartSnapshotIn extends SnapshotIn<typeof Cart> {}\n\nexport default Cart;\n","import {applySnapshot} from 'mobx-state-tree';\nimport {StoreType} from './types';\nimport {routes} from './ui';\n\ninterface VpsStockItem {\n    name: string;\n    clear_name: string; // eslint-disable-line camelcase\n    guid: string;\n    price: string;\n    images_urls: string[]; // eslint-disable-line camelcase\n}\n\ninterface AddItemsCommand {\n    stock: VpsStockItem[];\n}\n\nconst showItemsCast = (store: StoreType, command: AddItemsCommand): void => {\n    const stock = Object.values(command.stock);\n    const items = stock.map((item: VpsStockItem) => {\n        return {\n            id: item.guid,\n            name: item.name,\n            clearName: item.clear_name,\n            price: Number(item.price),\n            guid: item.guid,\n            imagesUrls: item.images_urls,\n        };\n    });\n\n    applySnapshot(store.products, {\n        title: 'Попкорн',\n        items,\n    });\n    store.ui.isLoading = false;\n};\n\ninterface VpsAddItem extends AssistantSdkCommand {\n    item: string;\n    count: number;\n}\n\nconst addItemCast = (store: StoreType, command: VpsAddItem): void => {\n    const {item: itemName, count} = command;\n    const item = store.products.items.find(({name}) => name === itemName);\n\n    let products = count;\n    if (item) {\n        while (products) {\n            store.cart.addToCart(item.id);\n            products -= 1;\n        }\n    }\n};\n\nconst gotoCart = (store: StoreType): void => {\n    store.ui.gotoPage(routes.CATALOG);\n};\n\nconst makePayment = () => {\n    return {\n\n    };\n};\n\nconst casts: {[key: string]: Function} = {\n    SHOW_ITEMS: showItemsCast,\n    ADD_ITEM: addItemCast,\n    GO_TO_VALIDATION: gotoCart,\n    VALIDATION_OK: makePayment,\n};\n\nexport default casts;\n","import {types, flow, applySnapshot} from 'mobx-state-tree';\n\nimport {PRODUCTS_MOCK, USER_MOCK} from 'mocks';\n\nimport user from './user';\nimport ui from './ui';\nimport products from './products';\nimport cart from './cart';\n\nimport {StoreType} from './types';\n\nimport casts from './casts';\n\n\nconst delay = (ms: number): Promise<void> => new Promise((resolve) => setTimeout(resolve, ms));\n\nconst Store = types\n    .model('Store', {\n        ui: types.optional(ui, {}),\n        products: types.optional(products, {}),\n        cart: types.optional(cart, {}),\n        user: types.optional(user, {}),\n    })\n    .actions((self) => {\n        const store = self;\n\n        const afterCreate = function init(): void {\n            applySnapshot(store.user, USER_MOCK);\n            store.ui.isLoading = true;\n\n            if (window.AssistantHost && typeof window.AssistantHost.ready === 'function') {\n                window.AssistantHost.ready();\n            }\n        };\n\n        const onMessage = (message: AssistantSdkCommand): void => {\n            const {command} = message.smart_app_data;\n\n            if (command in casts) {\n                const castFn = casts[message.type];\n\n                castFn(store, message.smart_app_data);\n            } else {\n                window.__messages.push({\n                    'not-fount': message,\n                });\n            }\n        };\n\n        return {onMessage, afterCreate};\n    });\n\nconst store = Store.create({});\n\ninterface Item {\n    number: number | null;\n    title: string;\n    id: string;\n    action: Record<string, string>;\n}\n\ninterface ItemsMap {\n    items: Item[];\n}\n\nfunction castFromStore(store: StoreType): ItemsMap {\n    return {\n        items: store.products.items.map((product) => {\n            return {\n                number: product.index,\n                title: product.name,\n                visibles: product.visible,\n                id: product.id,\n                count_in_cart: store.cart.itemsMap[product.id] ? store.cart.itemsMap[product.id].length : 0, // eslint-disable-line\n                action: {\n\n                },\n            };\n        }),\n    };\n}\n\nwindow.AssistantClient = window.AssistantClient || {};\n\n/**\n * Assistand SDK API implementation:\n */\n\nwindow.AssistantClient.onStart = function AssistantSdkOnStart(message: any): void {\n    window.__messages = window.__messages || [];\n    window.__messages.push(message);\n};\n\nwindow.AssistantClient.onData = function AssistantSdkOnMessage(command: AssistantSdkCommand): void {\n    window.__messages = window.__messages || [];\n    window.__messages.push(command);\n    store.onMessage(command);\n};\n\nwindow.AssistantClient.onRequestState = function AssistantSdkOnRequestState(): void {\n    window.AssistantHost.updateState(JSON.stringify(castFromStore(store)));\n};\n\nwindow.sendMessage = function AssistantSdkSendMessage(message: any): void {\n    window.AssistantHost.sendMessage(JSON.stringify(message));\n};\n\nexport default store;\n"],"sourceRoot":""}